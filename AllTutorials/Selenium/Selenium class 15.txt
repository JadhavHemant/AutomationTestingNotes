How to take screenshot in selenium											VVVVIMMMPPPPPPPPPPP
-------------------------------------------------------------------------------------------------------------------------------------------
		- TakesScreenshot is an interface present inside the Selenium webdriver.
		- if u want to capture the screenshot then we have use getScreenshotAs() method from TakesScreenshot interface.
		- then we use copyFile() method from FileUtils class to store the screenshot from source location to destination location. 
	
Step 1: convert the WebDriver Object into the TakesScreenshot here we perform down casting concept.			

			TakesScreenshot ts = (TakesScreenshot)driver;

step 2: capture the screenshot using getScreenshotAs() by passing OutputType.FILE
					
			File src = ts.getScreenshotAs(OutputType.FILE);

				- getScreenshotAs() method is used to capture the Screenshot
				- getScreenshotAs() method inside the TakesScreenshot interface.
				- return type of getScreenshotAs() method is File class.


step 3: if u want to store the Screenshot in destination location then we have to create Object of File class by passing File destination location.

		File dest =new File("destination location");


step 4: if u want to copy the screenshot from source location to destination location then we use copyFile() method by passing source and destination location.
		
		FileUtils.copyFile(src, dest);
-------------------------------------------------------------------------------------------------------------------------------------------
Scenario 1:
		open a guru 99 application
		enter the first name and last name
		and takes the screenshot

Step 1: Connect to the actual browser
			System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2; up casting
			WebDriver driver =new ChromeDriver();
step 3: open a url
			driver.get("https://demo.guru99.com/test/newtours/register.php");
step 4: find the first name text box and enter the values
			driver.findElement(By.name("firstName")).sendKeys("dipali");

step 5: find the last name text box and enter the values
			driver.findElement(By.name("lastName")).sendKeys("Joshi");

step 6":convert the WebDriver object into TakesScreenshot
		TakesScreenshot ts = (TakesScreenshot)driver;
		
step 7: use getScreenshotAs() method by passing OutputType.FILE to capture the actual screenshot
			
			File src = ts.getScreenshotAs(OutputType.FILE);			

step 8:if want to store the screenshot in destination location then we have to create object of File class by passing file location.

			File dest =new File("destination location");

step 9: copy the screenshot from source location to destination location using copyFile() method by passing source and destination location
		
			FileUtils.copyFile(src, dest);
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Note:
		if u want to use copyFile() method from FileUtils class then we have to add """"common io dependency in pom.xml file""".

<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.11.0</version>
</dependency>

-----------------------------------------------------------------------------------------------------------------------------------------------------------
package Tutorial15;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo1 {

	public static void main(String[] args) throws IOException {

		// step 1: connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a URL
		driver.get("https://demo.guru99.com/test/newtours/register.php");

		// step 4: find the first name text box and enter the values
		driver.findElement(By.name("firstName")).sendKeys("Aboli");

		// step 5: find the last name text box and enter the values
		driver.findElement(By.name("lastName")).sendKeys("Shinde");

		// step 6: convert the WebDriver object into the TakesScreenshot

		TakesScreenshot ts = (TakesScreenshot) driver;

		// step 7: use getScreenshotAs() method by passing OutputType.FILE to capture
		// the actual screenshot in file format

		File src = ts.getScreenshotAs(OutputType.FILE);

		// step 8: store the screenshot in destination location then we have to create
		// Object of File class by passing file destination location

		File dest = new File("C:\\Users\\praf0\\OneDrive\\Desktop\\"
				+ "Automation Testing 27th April 2024 Batch\\Screenshot\\xyz.png");

		// step 9: copy the screenshot from source location to destination location by
		// using copyFile() and by passing
		// source and destination location

		FileUtils.copyFile(src, dest);

	}

}
========================================================================================
package Tutorial15;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo2 {

	public static void main(String[] args) throws IOException {
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		WebDriver driver = new ChromeDriver();

		driver.get("https://demo.guru99.com/test/newtours/register.php");

		driver.findElement(By.name("firstName")).sendKeys("Anuja");

		// convert the WebDriver Object into the TakesScreenshot
		TakesScreenshot ts = (TakesScreenshot) driver;

		// capture the actual screenshot using getScreenshotAs() method and by passing
		// OutputType.FILE to capture the screenshot in file format.

		File src = ts.getScreenshotAs(OutputType.FILE);

		// store the destination location then we have to create object of File class by
		// passing destination location

		File dest = new File(System.getProperty("user.dir")+"\\PassScreenshot\\b1.png");

		// copy the screenshot from source location and store in destination location.
		FileUtils.copyFile(src, dest);

	}

}
=============================================================================================
		
Print current date and time in console.
	step 1: create Object of SimpleDateFormat class by passing date and time format.
					
					SimpleDateFormat simple =new SimpleDateFormat("ddMMyyyy_HHmmss");

	step 2: use format() method by passing new Date() object from SimpleDateFormat class.

					String abc = simple.format(new Date());
		

	Step 3: print in abc variable in console
					System.out.println(abc);

=============================================================================================
package Tutorial15;

import java.text.SimpleDateFormat;
import java.util.Date;

public class Demo3 {

	public static void main(String[] args) {

		// Step 1: create object of SimpleDateFormat class by passing date and time
		// format
		SimpleDateFormat simple = new SimpleDateFormat("ddMMyyyy_HHmmss");

		// step 2: use format() method by passing new Date() object from
		// SimpleDateFormat class.

		String abc = simple.format(new Date());

		System.out.println(abc);

	}

}
============================================================================
Scenario 1;
		open a facebook 
		enter the first name 
		capture screenshot and provide the screenshot name as facebook14052024_195788.png

step 1: connect actual browser
				System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2: up casting
				WebDriver driver = new ChromeDriver();

step 3; open a url
				driver.get("https://www.facebook.com/reg");

step 4: find the first name text box and enter the value
				driver.findElement(By.name("firstname")).sendKeys("Pooja")

step 5: convert the WebDriver object into the TakesScreenshot
				TakesScreenshot ts = (TakesScreenshot)driver;

step 6: use getScreenshotAs() method by passing OutputType.FILE
				File src = ts.getScreenshotAs(OutputType.FILE);

step 7;create object of SimpleDateFormat class by passing date and time format
				SimpleDateFormat simple =new SimpleDateFormat("ddMMyyyy_HHmmss");
			
step 8: use format() method by passing Date class object 
				String abc = simple.format(new Date());

step 9: create object of File class by passing file Destination location
								capture screenshot and provide the screenshot name as facebook14052024_195788.png


				File dest =new File(System.getProperty("user.dir")+"\\PassScreenshot\\facebook"+abc+".png");

step 10: copy the screenshot from source location to destination location

				FileUtils.copyFile(src, dest);

package Tutorial15;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo4 {

	public static void main(String[] args) throws IOException {
		// Step 1: connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// up casting
		WebDriver driver = new ChromeDriver();

		// open a url
		driver.get("https://www.facebook.com/reg");

		// find the first name text box
		driver.findElement(By.name("firstname")).sendKeys("Rahul");

		// convert the WebDriver object into the TakesScreenshot
		TakesScreenshot ts = (TakesScreenshot) driver;

		// use getScreenshotAs() method by passing OutputType.FILE
		File src = ts.getScreenshotAs(OutputType.FILE);

		// create object of SimpleDateFormat class by passing date and time format
		SimpleDateFormat simple = new SimpleDateFormat("ddMMyyyy_HHmmss");

		// use format() method by passing Date class object
		String abc = simple.format(new Date());

		// store the screenshot in destination location by creating object of File
		// class and passing File destination location

		File dest = new File(System.getProperty("user.dir") + "\\PassScreenshot\\facebook" + abc + ".png");

		// copy the screenshot from source location and store in destination location
		// using copyFile() method

		FileUtils.copyFile(src, dest);

	}

}
========================================================================================
How to capture the Full Screenshot in selenium WebDriver						VVVVVIMMMPPPPP
				
		- AShot library is used to take the full page screenshot of visible part of the web page and then it scroll to capture the rest of the page
		screenshot.


Step 1: create object of AShot class
				AShot a =new AShot();

step 2: use shootingStrategy() method by passing ShootingStrategies.viewPortPasting() method and inside the viewPortPasting method pass the time in milliseconds.
				a.shootingStrategy(ShootingStrategies.viewPortPasting(1000));

step 3: use takeScreenshot() method by passing WebDriver instance.
		Screenshot sc = a.takeScreenshot(driver);


Step 4: capture the actual screenshot using getImage() method
		BufferedImage src = sc.getImage();

step 4:if u want to store the screenshot in destination location then we create object of File class by passing file destination location
		
		File dest = new File("file destination location");


step 5:capture the screenshot from source location and store in destination location using write() method and by passing source location, image type and destination location from ImageIO class.

			ImageIO.write(src, "PNG", dest);
		
--------------------------------------------------------------------------------------------------------------------------------
Scenario 1:
			open amazon and take  full page screenshot

Step 1: connect to actual browser
step 2: up casting
step 3: open a url
				driver.get("https://www.amazon.com");
step 4: create object of AShot class
					AShot a = new AShot();
Step 5: use shootingStrategy() method to capture the screenshot of visible part of the page and use viewPortPasting() from ShootingStrategies class to capture screenshot of remaining web page by scrolling the page. and by mentioning the scrolling to wait to load the web page.

				a.shootingStrategy(ShootingStrategies.viewPortPasting(2000));

step 6: use takeScreenshot() method by passing WebDriver instance.
			Screenshot sc = a.takeScreenshot();

step 7: capture the actual screenshot in source location then we use getImage() method
			BufferedImage src = sc.getImage();

step 8: store the screenshot in destination location by creating object of File class 
		
			File dest =new File("file destination);
	
step 9: capture the capture the screenshot from source location and store in destination location using write() method and by passing 3 arguments
		as source location of screenshot and image type as PNG and destination location of screenshot

			ImageIO.write(src,"PNG",dest);


-----------------------------------------------------------------------------------------------------------------------------------------------------
note:
	<!-- https://mvnrepository.com/artifact/ru.yandex.qatools.ashot/ashot -->
<dependency>
    <groupId>ru.yandex.qatools.ashot</groupId>
    <artifactId>ashot</artifactId>
    <version>1.5.4</version>
</dependency>

-----------------------------------------------------------------------------------------------------------------------------------------------------

package Tutorial15;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.shooting.ShootingStrategies;

public class Demo5 {

	public static void main(String[] args) throws IOException {
		// Step 1: connect to actual browser
//		System.setProperty("webdriver.chrome.driver",
//				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a url
		driver.get("https://github.com/rest-assured/rest-assured/wiki/Usage");

		// step 4: create object of AShot class

		AShot a = new AShot();

		// step 5: use shootingStrategy() method to capture the visible part of the web
		// page screenshot and use viewPortPasting() method from ShootingStrategies
		// class to capture
		// screenshot of remaining web page by scrolling web page and by mentioning
		// scrolling to wait

		a.shootingStrategy(ShootingStrategies.viewportPasting(1000));

		// step 6: use takeScreenshot by passing WebDriver instance
		Screenshot sc = a.takeScreenshot(driver);

		// step 7: get the captured screenshot using getImage() method

		BufferedImage scr = sc.getImage();

		// step 8: store screenshot in destination location by creating object of File
		// class
		File f = new File(System.getProperty("user.dir") + "\\PassScreenshot\\p3.png");

		// step 8: copy the screenshot from source to destination location using write()
		// method and
		// by passing source location and image type and destination location.

		ImageIO.write(scr, "PNG", f);

	}

}

================================================================================
package Tutorial15;

import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.Screenshot;
import ru.yandex.qatools.ashot.shooting.ShootingStrategies;

public class Demo6 {

	public static void main(String[] args) throws IOException {
		WebDriver driver = new ChromeDriver();

		// takes screenshot
		File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(src, new File("destination location"));

		// Screenshot using AShot
		Screenshot sc = new AShot().shootingStrategy(ShootingStrategies.viewportPasting(2000)).takeScreenshot(driver);
		ImageIO.write(sc.getImage(), "PNG", new File("destination location"));

	}

}
































































