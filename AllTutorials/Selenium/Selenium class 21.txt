Selenium 
-------------------------------------------------------------------------------------------------------------------------------------------------
How to find broken link in application?											VVVVVIMMMPPPPPPPPPPP



-------------------------------------------------------------------------------------------------------------------------------------------------
check https://www.google.com link is valid or not

step 1: create object of URL class by passing google url
			URL url = new URL("https://www.google.com");

step 2: open connection to URL using openConnection() method
		- openConnection() method present inside the URL class
		- return type of OpenConnection() method is URLConnection.
		- URLConnection is an interface in java

		URLConnection con = url.openConnection();

step 3: convert URLConnection into the HttpURLConnection
		- HttpURLConnection is an interface in java, so we can not create object of it so we use Down casting concept.
	
		HttpURLConnection httpcon = (HttpURLConnection)con;

step 4: connect to the actual url using connect() method
	
		httpcon.connect();

step 5: capture the response code of URL using getResponseCode() method

		int a  = httpcon.getResponseCode();

		syso(a);
-------------------------------------------------------------------------------------------------------------------------------------------------
Response Code/ Status Code series

1**				information about the URL (URL is valid)

2**				Successful Series (URL is valid)

3**				Navigation from One Application to another application   (URL is valid)

4**				Client Side Error (URL is invalid)

5**				Server Side Error (URL is invalid)

-------------------------------------------------------------------------------------------------------------------------------------------------
package Tutorial16;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;

public class Demo1 {

	public static void main(String[] args) throws IOException {
		
		//step 1: create Object of URL class by passing google url
		URL url =new URL("https://www.google.com");
		
		//step 2: create openConnction() to url
		URLConnection con = url.openConnection();
		
		//step 3: convert URLConnection to the HttpURLConnection
		
		HttpURLConnection httpcon = (HttpURLConnection)con;
		
		//step 4: connect to url using connect() method
		httpcon.connect();
		
		//step 5: capture response code
		int abc = httpcon.getResponseCode();
		System.out.println(abc);
		
	}
}
-------------------------------------------------------------------------------------------------------------------------------------------------
capture all URL in facebook register page


step 1:up casting
			WebDriver driver = new ChromeDriver();

step 2: open a url
			driver.get("https://www.facebook.com/reg");

step 3: find all link using findElements() method and tagname is a
		
		List<WebElement> ls = driver.findElements(By.tagName("a"));

		
step 4:  iterate all values and capture the inner HTML href attribute value using getAttribute()

		for(WebElement abc : ls)
		{
				String actualUrl =abc.getAttribute("href")
				syso(actualUrl);
		}
-------------------------------------------------------------------------------------------------------------------------------------------------
package Tutorial;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo1 {

	public static void main(String[] args) {
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.facebook.com/reg");

		List<WebElement> listLink = driver.findElements(By.tagName("a"));

		for (WebElement abc : listLink) {
			String actualUrl = abc.getAttribute("href");
			System.out.println(actualUrl);
		}

	}
}
==========================================================================================
find broken link in application


step 1: connect to actual browser

step 2: up casting
			WebDriver driver = new ChromeDriver();

step 3: Open a url
			driver.get("https://www.facebook.com/reg");

step 4: find all link in web page using findElements() method
			List<WebElement> listLinks = driver.findElements(By.tagName("a"));


step 5;iterate all links  values
		
	for(WebElement abc : listLinks)
{
			step 6) : capture all actual link  using getAttribute() method
				
			String actualUrl = abc.getAttribute("href");
			
			step 7) create Object of URL class by passing actual link

			URL url = new URL(actualUrl);

			step 8) crate open to connection to url  using openConnection() method

			URLConnection con = url.openConnection();

			step 9) convert the URLConnection to HttpURLConnection

			HttpURLConnection httpcon  = (HttpURLConnection)con;

			step 10) connect to url
		
			httpcon.connect();

			step 11) get response code

			int a = httpcon.getResponseCode();
			syso(actualUrl)
			syso(a);
}


package Tutorial;

import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo2 {

	public static void main(String[] args) throws Exception {
		// step 1: connect to actual url
		// Step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a url
		driver.get("https://www.facebook.com/reg");

		// step 4: find all links
		List<WebElement> listLinks = driver.findElements(By.tagName("a"));

		// step 5: iterate all links
		for (WebElement abc : listLinks) {

			// step 6: capture all actual link or ulr
			String actualurl = abc.getAttribute("href");

			// step 7: create Object of URL class by passing actual url
			URL url = new URL(actualurl);

			// step 8: open connection to url using openConnection();
			URLConnection con = url.openConnection();

			// step 9: convert URLConnection to HttpURLConnection
			HttpURLConnection httpcon = (HttpURLConnection) con;

			// step 10: connect to url
			httpcon.connect();

			// step 11: capture response code
			int a = httpcon.getResponseCode();

			System.out.println(actualurl + " ::   " + a);

		}

	}
}
=====================================================================================================
package Tutorial;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo2 {

	public static void main(String[] args) {
		// step 1: connect to actual url
		// Step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a url
		driver.get("http://www.deadlinkcity.com/");

		// step 4: find all links
		List<WebElement> listLinks = driver.findElements(By.tagName("a"));

		// step 5: iterate all links
		for (WebElement abc : listLinks) {

			// step 6: capture all actual link or ulr
			String actualurl = abc.getAttribute("href");

			// step 7: create Object of URL class by passing actual url
			URL url=null;
			try {
				url = new URL(actualurl);
			} catch (MalformedURLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			// step 8: open connection to url using openConnection();
			URLConnection con = null;
			try {
				con = url.openConnection();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			// step 9: convert URLConnection to HttpURLConnection
			HttpURLConnection httpcon = (HttpURLConnection) con;

			// step 10: connect to url
			try {
				httpcon.connect();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			// step 11: capture response code
			int a=0;
			try {
				a = httpcon.getResponseCode();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			System.out.println(actualurl + " ::   " + a);

		}

	}
}
=====================================================================================================
package Tutorial;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo2 {

	public static void main(String[] args) {
		// step 1: connect to actual url
		// Step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a url
		driver.get("https://www.amazon.in/");

		// step 4: find all links
		List<WebElement> listLinks = driver.findElements(By.tagName("a"));

		// step 5: iterate all links
		for (WebElement abc : listLinks) {

			// step 6: capture all actual link or ulr
			String actualurl = abc.getAttribute("href");
			System.out.println(actualurl);
			if (actualurl == null) {
				continue;
			}

			if (actualurl.startsWith("http")) {

				// step 7: create Object of URL class by passing actual url
				URL url = null;
				try {
					url = new URL(actualurl);
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				// step 8: open connection to url using openConnection();
				URLConnection con = null;
				try {
					con = url.openConnection();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				// step 9: convert URLConnection to HttpURLConnection
				HttpURLConnection httpcon = (HttpURLConnection) con;

				// step 10: connect to url
				try {
					httpcon.connect();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				// step 11: capture response code
				int a = 0;
				try {
					a = httpcon.getResponseCode();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				System.out.println(actualurl + " ::   " + a);
			}
		}

	}
}
================================================================================================
find and print total link in application, valid link and broken link


public class Demo1
{
	public static void main(String [] args)
	{
		int validLink=0;
		int invalidLink=0;

		WebDriver driver = new ChromeDriver();
		driver.get("https://www.amazon.in/");
		List<WebElement> listLinks = driver.findElement(By.tagName("a"));

		for(WebElement abc : listLinks)
		{
				String actualUrl = abc.getAttribute("href");
				syso(actualUrl);
				if(actualUrl==null || actualUrl.isEmpty())
				{
					invalidLink++;
					continue;		//if continue with next iteration
				}
		
				if(actualUrl.startsWith("http"))
				{
							URL url = new URL(actualUrl);
							URLConnection con =url.openConnection();
							HttpURLConnction httpcon =(HttpURLConnction)con;
							httpcon.connect();
							int respCode = httpcon.getResponseCode();
							syso(respCode);
							if(respCode<400)
							{
									validLink++;
							}
							else
							{
									invalidLink++:
							}

			
				}

				
		}
			
	}
}
============================================================================================
package Tutorial;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo3 {

	public static void main(String[] args) {
		int validLink = 0;
		int invalidLink = 0;
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.amazon.in/");
		List<WebElement> listLink = driver.findElements(By.tagName("a"));
		int totalLink = listLink.size();

		for (WebElement abc : listLink) {
			String actualUrl = abc.getAttribute("href");

			if (actualUrl == null || actualUrl.isEmpty()) {
				invalidLink++;
				continue;
			}
			
			if (actualUrl.startsWith("http")) {
				URL url = null;
				try {
					url = new URL(actualUrl);
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				URLConnection con = null;
				try {
					con = url.openConnection();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				HttpURLConnection httpcon = (HttpURLConnection) con;
				try {
					httpcon.connect();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				int respcode = 0;
				try {
					respcode = httpcon.getResponseCode();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				System.out.println(actualUrl + "  :::: " + respcode);
				if (respcode < 400) {
					validLink++;
				} else {
					invalidLink++;
				}
			}
			else
			{
				invalidLink++;
			}
		}

		System.out.println("------------------------------------------------------");
		System.out.println("Total Link is " + totalLink);
		System.out.println("Valid Link are " + validLink);
		System.err.println("inValid Link are " + invalidLink);

		driver.quit();

	}

}
================================================================================
package Tutorial;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo3 {

	public static void main(String[] args) {
		int validLink = 0;
		int invalidLink = 0;
		WebDriver driver = new ChromeDriver();
		driver.get("https://www.amazon.in/");
		List<WebElement> listLink = driver.findElements(By.tagName("a"));
		int totalLink = listLink.size();

		for (WebElement abc : listLink) {
			String actualUrl = abc.getAttribute("href");

			if (actualUrl == null || actualUrl.isEmpty()) {
				System.out.println(actualUrl);
				invalidLink++;
				continue;
			}
			
			if (actualUrl.startsWith("http")) {
				URL url = null;
				try {
					url = new URL(actualUrl);
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				URLConnection con = null;
				try {
					con = url.openConnection();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				HttpURLConnection httpcon = (HttpURLConnection) con;
				try {
					httpcon.connect();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				int respcode = 0;
				try {
					respcode = httpcon.getResponseCode();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				System.out.println(actualUrl + "  :::: " + respcode);
				if (respcode < 400) {
					validLink++;
				} else {
					invalidLink++;
				}
			}
			else
			{
				System.out.println(actualUrl);
				invalidLink++;
			}
		}

		System.out.println("------------------------------------------------------");
		System.out.println("Total Link is " + totalLink);
		System.out.println("Valid Link are " + validLink);
		System.err.println("inValid Link are " + invalidLink);

		driver.quit();

	}

}
=========================================================================================
























































































































