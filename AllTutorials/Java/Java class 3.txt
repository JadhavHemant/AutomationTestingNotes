Datatypes:
----------------------------------------------------------------------
	there are 2 types of datatypes
	1) Primitive Datatype
	2) Non Primitive Datatype
----------------------------------------------------------------------
1) Primitive Datatype
	there are 8 types of primitive datatypes 
	1) byte
	2) short
	3) int
	4) long
	5) float
	6) double
	7) char
	8) boolean
----------------------------------------------------------------------
syntax:
		datatype variablename=value;

Variable Name declaration Rules
				abc						Valid
				ABC						valid
				_abc					valid
				_ABC					valid
				$abc					valid
				$ABC					valid
				abcXYZ					valid
				abc1828				valid
			
				2122abc				invalid				----> syntax Errors
				@abc					invalid				----> syntax Errors
 	
package Tutorial3;

public class Demo1 {

	public static void main(String[] args) {
		
		int abc=10;				//Valid variable name
		int ABC =20;			//Valid variable name
		int _abc=30;			//Valid variable name
		int _ABC=40;			//Valid variable name
		int $abc=300;			//Valid variable name			
		int $ABC=3043;			//Valid variable name	
		int abc134=2340;		//Valid variable name
		int ABC122=2340;		//Valid variable name
		
		int 123=3455;			//Invalid variable name
		int 134abc=344;			//Invalid variable name
		int #abc=234;			//Invalid variable name
		int abc#$$=345;			//Invalid variable name
		
		int abc xyz=34330;		//Invalid variable name
		

	}

}
===========================================================
Can we declare multiple variable in same line with same datatypes
		yes

		Datatype variablename1=value1, variablename2=value2, variableName3=value3;

		int a=100,b=200,c=300;
------------------------------------------------------------
Can we declare multiple variable in same line with different datatypes
		No,
		int a=200,b=23.34f,c='A';			//syntax Error

package Tutorial3;

public class Demo2 {

	public static void main(String[] args) {
		
		int a=10,b=20,c=30;
		
		System.out.println(c);
		System.out.println(a);
		System.out.println(b);
		

	}

}

package Tutorial3;

public class Demo3 {

	public static void main(String[] args) {
		
		char a='P',b='S',c='R',d='A',e='S';
		
		System.out.println(a);
		System.out.println(b);
		System.out.println(c);
		System.out.println(d);
		System.out.println(e);
		

	}

}
==================================
Operator in java
	there are 4 types operator in java
	1) Arithemetic operator
	2 Relational Operator
	3) logical Operator
	4) Assignment Operator

1) Arithemetic operator
		there are 7 types of Arithemetic operator
			i) addition			+
			ii) substraction		-
			iii) Multiplication	*
			iv) Division			/
			v) module			%
			vi) increment		++
			viii) decrement		--

e.g.
		int a=20,b=10;

		System.out.println(a+b);
		System.out.println(a-b);
		System.out.println(a*b);
		System.out.println(a/b);
		System.out.println(a%b);
		a++;//a = a+1;
		System.out.println(a);
		b--;//b=b-1
		System.out.println(b);			

package Tutorial3;

public class Demo4 {

	public static void main(String[] args) {
		int a=20,b=10;
		System.out.println(a+b);//30
		System.out.println(a-b);//10
		System.out.println(a*b);//200
		System.out.println(a/b);//2
		System.out.println(a%b);//0
		a++;
		System.out.println(a);//21
		b--;
		System.out.println(b);//9
	}

}

package Tutorial3;

public class Demo5 {

	public static void main(String[] args) {
		
		int a=5;
		float b=10.0f;
		
		System.out.println(a+b);//15.0
		System.out.println(a-b);//-5.0
		System.out.println(a*b);//50.0
							
		System.out.println(a/b);//0.5
					
		System.out.println(a%b);//5
		a++;
		System.out.println(a);//6
		b--;
		System.out.println(b);//9.0
	}

}
----------------------------------------------
package Tutorial3;

public class Demo6 {

	public static void main(String[] args) {
		int a=10,b=20;
		
		System.out.println(a+b);//30
		System.out.println(a-b);//-10
		System.out.println(a*b);//200
		System.out.println(a/b);//0
		System.out.println(a%b);//10
		a++;
		System.out.println(a);//1
		b--;
		System.out.println(b);//19
	}

}
====================================================
2) Relational Operator
	there are 6 types in Relational Operator
		i) equal to 						==
		ii) not equal to					!=
		iii) greater than					>
		iv)  greater than and equal to		>=
		v) less than						<
		vi) less than and equal to			<=

	Result will be show in boolean (true/false)

	int a=100;
	int b=200;
	
	System.out.println(a==b);	//false
	System.out.println(a!=b);		//true
	System.out.println(a>b);		.//false
	System.out.println(a>=b);	//false
	System.out.println(a<b);		//true
	System.out.println(a<=b);	//true
---------------------------------------------------
	int a=100;
	int b=100;
	
	System.out.println(a==b);	//T
	System.out.println(a!=b);		//F
	System.out.println(a>b);		//F
	System.out.println(a>=b);	//TRUE
	System.out.println(a<b);		//false
	System.out.println(a<=b);	//TRUE

	package Tutorial3;

public class Demo7 {

	public static void main(String[] args) {
		int a = 100, b = 200;
		
		System.out.println(a == b);// False
		System.out.println(a != b);// True
		System.out.println(a > b);// False
		System.out.println(a >= b);// False

		System.out.println(a < b);// true
		System.out.println(a <= b);// true

	}

}

package Tutorial3;

public class Demo8 {

	public static void main(String[] args) {
		int a = 100;
		int b = 100;

		System.out.println(a == b);// true
		
		System.out.println(a != b);// false

		System.out.println(a>b);//false
		
		System.out.println(a>=b);//true
		
		System.out.println(a<b);//false
		
		System.out.println(a<=b);//True
	}

}

package Tutorial3;

public class Demo9 {

	public static void main(String[] args) {
		int a=100;
		float b=100.00f;
		
		System.out.println(a==b);//true
		
		System.out.println(a!=b);//false
		
		System.out.println(a>b);//false
		
		System.out.println(a>=b);//true
		
		System.out.println(a<b);//false
		
		System.out.println(a<=b);//true
		
	}

}
=======================================================
3) Assignment operator
		
		i) assignment 					=				we can assign the values for variable
		ii) add and Assign				+=	
		iii) sub and Assign				-=			
		iv) div and assign				/=
		v) mul and assign				*=
		vi) module and assign			%=

	int a=100;
	
	System.out.println(a);	//100

	 a=2000;			We are re assign the value for variable a.

	System.out.println(a);	//2000
	
	a=-10;
	
	System.out.println(a);	//-10
---------------------------------------------------------------------------------------
ii) add and Assign				+=	

	int a=5;	//12

	a+=7;		//a=a+7= 5+7=12

	a+=3;		//a=a+3=12+3=15

	a+=9;		//a=a+9	= 15+9= 24

---------------------------------------------------------------------------------------
iii) sub and assign
	
	int a=20;

	a-=5;		//a=a-5=20-5=15

	a-=7;		//a=a-7=15-7=8


package Tutorial3;

public class Demo10 {

	public static void main(String[] args) {

		int a = 100;

		System.out.println(a);

		a = 299;
		System.out.println(a);
		
		a=-145;
		
		System.out.println(a);

	}

}

package Tutorial3;

public class Demo11 {

	public static void main(String[] args) {

		int a = 10;
		System.out.println(a);

		a+=100;
		System.out.println(a);//110
		
		a+=20;
		System.out.println(a);//130
		
		a-=115;	//a=a-115= 130-115= 15
		
		System.out.println(a);//15
		
		a-=3;
		System.out.println(a);//12
		
		a*=10;
		System.out.println(a);//120
		
		a/=10;
		System.out.println(a);//12
		
		a%=6;
		System.out.println(a);//0
		
		
	}

}

package Tutorial3;

public class Demo12 {

	public static void main(String[] args) {

		int a = 15;
		System.out.println(a);

		a *= 10; // a=a*10=15*10=150
		System.out.println(a);// 150

		a += 50;// a=a+50=150+50=200
		System.out.println(a);// 200
		
		a-=140;//a=a-140=200-140=60
		System.out.println(a);//60
		
		a/=20;//a=a/20=60/20=3
		System.out.println(a);//3
		
		a%=10;//
		System.out.println(a);//3
		
		
	}

}
----------------------------------------------------------------------------
4) Logical operator
		there are 3 types Logical operator
		1) and operator			&&
		2) or operator			||
		3) not operator			!

1) and operator			&&

		if both condition are true then and then only result is true.

		condition1 		condition2		and Operator result
		true				true					true
		true				false				false
		false			true					false
		false			false				false


		System.out.println(true&&true);
		System.out.println(true&&false);//false
		System.out.println(false&&true);//false
		System.out.println(false&&false);//false

package Tutorial3;

public class Demo13 {

	public static void main(String[] args) {

		System.out.println(true && true);// true

		System.out.println(true && false);// false

		System.out.println(false && true);// false

		System.out.println(false && false);// false

	}

}
----------------------------------------------------------------------
2) Or operator					||
		if anyone condition is true then result is true

		condition1 	condition2		or operator result
		true			true				true
		true			false			true
		false		true				true
		false		false			false

		System.out.println(true || true);	true
		System.out.println(true || false);	true
		System.out.println(false || true);	true
		System.out.println(false || false);	false

package Tutorial3;

public class Demo14 {

	public static void main(String[] args) {

		System.out.println(true || true);// true

		System.out.println(true || false);// true

		System.out.println(false || true);// true

		System.out.println(false || false);// false

	}

}
====================================
Not operator
	
	if condition is true, not operator mark the result is false
	if condition is false, not operator mark the result is true

	
package Tutorial3;

public class Demo15 {

	public static void main(String[] args) {

		System.out.println(!true);

		System.out.println(!false);

	}

}

package Tutorial3;

public class Demo16 {

	public static void main(String[] args) {
		
		int a=40,b=30,c=20;
		
		System.out.println((a>b)&&(a>c));//true
		
		System.out.println((a>b)||(a>c));//true
		
		System.out.println(!((a>b)&&(a>c)));//false
		

	}

}
==============================================
package Tutorial3;

public class Demo16 {

	public static void main(String[] args) {

		int a = 10, b = 30, c = 10;

		System.out.println((a > b) && (a == c));// false

		System.out.println((a > b) || (a == c));// true

	}

}
=========================================================














		






































































































