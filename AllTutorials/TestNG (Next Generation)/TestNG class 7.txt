Data Driven Testing
--------------------------------------------------------------------------------------------------------------------------
How to capture all values from Excel sheet and print in console

Step 1: check file is present or not by creating object of File class by passing location of file
			
				File f =new File("file location");


step 2: read all file content by creating object FileInputStream by passing File class instance

			FileInputStream fis =new FileInputStream(f);


step 3: load all work sheet by creating object of XSSFWorkbook by passing FileInputStream instance

			XSSFWorkbook workbook =new XSSFWorkbook(fis);

step 4: focus on specific sheet by using getSheetAt() method and passing sheet index.

			XSSFSheet sheet = workbook.getSheetAt(0);


step 5: get total count of rows using getLastRowNum() method
				
			int rows = sheet.getLastRowNum()+1;		//15


step 6: capture all first columns values

			//iterate the rows
			for(int i=0; i<rows; i++)
			{
					String a = sheet.getRow(i).getCell(0).getStringCellValue();
					System.out.println(a);//firstname3
			}

=================================================================================
package Tutorial5;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Demo1 {

	public static void main(String[] args) throws IOException {
		// Step 1: check file is present or not by creating object of File class and by
		// passing file location
		File f = new File("C:\\Users\\praf0\\OneDrive\\Desktop\\TestData.xlsx");

		// step 2: read all file content by creating object of FileInputStream class and
		// by passing File instance

		FileInputStream fis = new FileInputStream(f);

		// step 3: load all work sheet by creating object of XSSFWorkbook by passing
		// FileInputStream instance

		XSSFWorkbook workbook = new XSSFWorkbook(fis);

		// step 4: focus on specific sheet using getSheetAt() method and by passing
		// sheet index
		XSSFSheet sheet = workbook.getSheetAt(2);

		// step 5: count total numbers rows from sheet
		int rows = sheet.getLastRowNum() + 1;

		// step 6:capture all first column values

		// step 6a) iterate all rows

		for (int i = 0; i < rows; i++) {
			String a = sheet.getRow(i).getCell(0).getStringCellValue();
			System.out.println(a);
		}

	}

}
====================================================================================
public class Demo1
{
		public static XSSFWorkbook workbook;

		public Demo1(String excelPath)
		{
				File f =new File(excelPath);
				FileInputStream fis =new FileInputStream(f);
				workbook =new XSSFWorkbook(fis);
		}

		public int getTotalRowCount(int sheetIndex)
		{
				XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
				int rows = sheet.getLastRowNum()+1;
				return rows;
		}


		public String getSpecificSheetData(int sheetIndex, int row, int cell)
		{
				XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
				String data = sheet.getRow(row).getCell(cell).getStringCellValue();
		
				return data;
		}	







}


package Tutorial5;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Demo2 {
	public static XSSFWorkbook workbook;
	
	public Demo2(String excelPath) throws IOException
	{
		File f =new File(excelPath);
		FileInputStream fis =new FileInputStream(f);
		workbook =new XSSFWorkbook(fis);
	}
	
	public int getTotalRowCount(int sheetIndex)
	{
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
		
		int rows = sheet.getLastRowNum()+1;

		return rows;
	}

	public String getSheetTestData(int sheetIndex, int row, int cell)
	{
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
		
		String data = sheet.getRow(row).getCell(cell).getStringCellValue();
		
		return data;
	}
	
		
	
}

package Tutorial5;

import java.io.IOException;

public class Sample1 {

	public static void main(String[] args) throws IOException {

		Demo2 obj = new Demo2("C:\\Users\\praf0\\OneDrive\\Desktop\\TestData.xlsx");

		int rows = obj.getTotalRowCount(1);//
		
		
		for(int i=0;i<rows;i++)
		{
			String a = obj.getSheetTestData(1, i, 0);
			System.out.print(a + " \t");
			
			String b = obj.getSheetTestData(1, i, 1);
			System.out.print(b + " \t");
			
			String c = obj.getSheetTestData(1, i, 2);
			System.out.println(c);
		}
		
	}
}
================================================================
package Tutorial5;

import java.io.IOException;

public class Sample2 {

	
	public static void main(String[] args) throws IOException {
	
		Demo2 obj =new Demo2("C:\\Users\\praf0\\OneDrive\\Desktop\\TestData.xlsx");
		
		int rows = obj.getTotalRowCount(4);
		
		for(int i=0;i<rows;i++)
		{
			
			String a = obj.getSheetTestData(4, i, 0);
			System.out.print(a +" \t");
			
			String b = obj.getSheetTestData(4, i, 1);
			System.out.print(b +" \t");
			
			String c =obj.getSheetTestData(4, i, 2);
			System.out.print(c + "\t");
			
			String d = obj.getSheetTestData(4, i, 3);
			System.out.print(d + "\t");
		
			String e = obj.getSheetTestData(4, i, 4);
			System.out.print(e + "\t");
			
			String f = obj.getSheetTestData(4, i, 5);
			System.out.print(f + "\t");
			
			String g = obj.getSheetTestData(4, i, 6);
			System.out.println(g);
		}
		

	}

}
==========================================================
package Tutorial5;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Demo2 {
	public static XSSFWorkbook workbook;

	public Demo2(String excelPath) throws IOException {
		File f = new File(excelPath);
		FileInputStream fis = new FileInputStream(f);
		workbook = new XSSFWorkbook(fis);
	}

	public int getTotalRowCount(int sheetIndex) {
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);

		int rows = sheet.getLastRowNum() + 1;

		return rows;
	}

	public int getTotalColumnCount(int sheetIndex) {
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
		int cells = sheet.getRow(0).getLastCellNum();

		return cells;
	}

	public String getSheetTestData(int sheetIndex, int row, int cell) {
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);

		String data = sheet.getRow(row).getCell(cell).getStringCellValue();

		return data;
	}

}

package Tutorial5;

import java.io.IOException;

public class Sample2 {

	
	public static void main(String[] args) throws IOException, InterruptedException {
	
		Demo2 obj =new Demo2("C:\\Users\\praf0\\OneDrive\\Desktop\\TestData.xlsx");
	
		
		int rows = obj.getTotalRowCount(0);
		
		int cells = obj.getTotalColumnCount(0);
		
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cells;j++)
			{
				String p = obj.getSheetTestData(0, i, j);
				System.out.print(p + "\t");
				
			}
			
			System.out.println();
			

		}
		

	}

}
=============================================================
package Tutorial5;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Demo3 {
	public static XSSFWorkbook workbook;

	public Demo3(String excelPath) throws IOException {
		File f = new File(excelPath);
		FileInputStream fis = new FileInputStream(f);
		workbook = new XSSFWorkbook(fis);
	}

	public int getTotalRowCount(int sheetIndex)
	{
		XSSFSheet sheet  = workbook.getSheetAt(sheetIndex);
		int rows = sheet.getLastRowNum()+1;
		return rows;
	}
	
	public int getTotalColumnCount(int sheetIndex)
	{
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
		int cells = sheet.getRow(0).getLastCellNum();
		return cells;
	}
	
	
	public String getSheetTestData(int sheetIndex, int row, int cell)
	{
		XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
		
		String data = sheet.getRow(row).getCell(cell).getStringCellValue();
		
		return data;
	}
	
	
	
	
	
	
}
====================================================================================















