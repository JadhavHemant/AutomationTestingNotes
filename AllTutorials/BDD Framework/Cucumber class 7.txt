How to run parallel feature in cucumber with Junit?									VVVVVVIMMPPPPPPPPPPPPP
		- we can run feature file parallel by using maven surefire plugin or failsafe plugin.
		- declare browser name parameter in feature file.
		- same browsername parameter inside the snippets.
		- and write selenium script as per the scenarios 
		- then inside the pom.xml file 
		add build tag name 
				and inside the build tag name add plugins tag.	
					- inside the plugins tag add plugin tag.
					- then inside the plugin tag add maven surefire plugin or fail safe plugin.
					- then inside plugin tag add configuration plugin and then add includes tags and then include tag and pass the test Runner class name.
					- then close include and includes tag.

					- then add parallel tagname and pass methods as value and close parallel tag.
					- and then add threadCount tagname and pass the thread count number.

		pom.xml
				<build>
						<plugins>
								<plugin>
											<artifactid> maven surefire plugin artifactid </artifactid>
											<groupid> maven surefire plugin groupid </groupid>
											<version> maven surefire plugin version </version>
											<configuration>
														<includes>
															<include> ../TestRunner.RunnerTest.java </include>
														</includes>
														<parallel> methods </parallel>
														<threadCount> 4 </threadCount>
											</configuration>
								<plugin>					
						<plugins>
				<build>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.orangehrm</groupId>
	<artifactId>OrangeHRMApplication</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>OrangeHRMApplication</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
	</properties>

	<dependencies>
		<!-- 
	1) Cucumber java dependency
	2) cucumber core dependency
	3) cucumber-junit dependency
	4) Junit dependency / Junit Jupiter dependency
	5) cucumber-testNG dependency
	6) TestNG dependency
	7) common io Dependency
	8) apache POI Dependency
	9) Ashot maven dependency
	10) Extent reports dependency
	11) Extent Cucumber Adapter dependency
	12) maven surefire plugin
	13) Selenium Maven Dependency 
	-->


		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-core -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>6.11.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>6.11.0</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>6.11.0</version>
			<scope>test</scope>
		</dependency>


		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

		<!--
		https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>4.16.1</version>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<includes>
						<include>../TestRunner.RunnerTest.java</include>
					</includes>
					
					<parallel>methods</parallel>
					<threadCount>4</threadCount>
				</configuration>
			</plugin>

		</plugins>
	</build>


</project>

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
How to run parallel feature in cucumber with TestNG?									VVVVVVIMMPPPPPPPPPPPPP
	- we can run parallel feature in cucumber with TestNG by using maven sure fire plugin or maven fail safe plugins.
	- but we have to run feature file parallel, then we have create separate Runner classes for each and every feature files
	- and then we create xml file for both the Test runner classes and we use parallel=methods in suite level annotations in testng.xml file.

	<suite name="suite name" parallel="methods">
		<test name="test case name" >
			<classes>
					<class name="TestRunner.RunnerTest.java"/>
					<class name="TestRunner.RunTest.java"/>
			</classes>
		</test>
	</suite>


		- declare browser name parameter in feature file.
		- use same browsername parameter inside the snippets.
		- and write selenium script as per the scenarios 
		- then inside the pom.xml file 
		add build tag name 
				and inside the build tag name add plugins tag.	
					- inside the plugins tag add plugin tag.
					- then inside the plugin tag add maven surefire plugin or fail safe plugin.
					- then inside plugin tag add configuration plugin and inside the configuration tag add suiteXmlFiles tag and 
					then inside the suiteXmlFiles tag add suiteXml file tag by passing test.xml file name.

					- then add parallel tagname and pass methods as keyword and close parallel tag.
					- and then add threadCount tagname and pass the thread count number.

		pom.xml
				<build>
						<plugins>
								<plugin>
											<artifactid> maven surefire plugin artifactid </artifactid>
											<groupid> maven surefire plugin groupid </groupid>
											<version> maven surefire plugin version </version>
											<configuration>
														<suiteXmlFiles>
															<suiteXmlFile> testng.xml </suiteXmlFile>
														<suiteXmlFiles>
														<parallel> methods </parallel>
														<threadCount> 4 </threadCount>
											</configuration>
								<plugin>					
						<plugins>
				<build>


	<suite name="suite name" parallel="methods">
		<test name="test case name" >
			<classes>
					<class name="TestRunner.RunnerTest.java"/>
					<class name="TestRunner.RunTest.java"/>
			</classes>
		</test>
	</suite>
-------------------------------------------------------------------------------------
	<suite name="suite name" parallel="methods">
		<test name="test case name 1" >
			<classes>
					<class name="TestRunner.RunnerTest.java"/>
			</classes>
		</test>
			
		<test name="test case name 2" >
			<classes>
					<class name="TestRunner.RunTest.java"/>
			</classes>
		</test>
	</suite>



-------------------------------------------------------------------------------------

	<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite" parallel="methods">
	
  <test thread-count="5" name="Test">
	<classes>
		<class name="TestRunner.PIMPageRunnerTest"></class>
		<class name="TestRunner.AdminPageRunnerTest"></class>
		
	</classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->


===================================================================================================
How to run scenario parallel in cucumber									VVVVVVVIMMMPPPPPPPP

	 - we run scenario parallel in cucumber by overriding the scenarios() method from AbstractTestNGCucumberTests class,
	- and we override these method in Test Runner class.
	and after overriding we use @DataProvider annotation and we use parallel =true attribute in data provider annotation

package TestRunner;

import org.testng.annotations.DataProvider;

import io.cucumber.testng.AbstractTestNGCucumberTests;
import io.cucumber.testng.CucumberOptions;

@CucumberOptions(
		features="src/test/java/Features",
		glue="Steps"
		)
public class RunnerTest extends AbstractTestNGCucumberTests{

	@Override
	@DataProvider(parallel = true)
	public Object[][] scenarios() {
		// TODO Auto-generated method stub
		return super.scenarios();
	}

	
	
}
===================================================================================================
cogmento CRM
		- run all feature files in parallel using cucumber with Junit
		 run all feature files in parallel using cucumber with TestNG

---------------------------
create 4 features file
	1) Contact page
								- login Page
												- 
								- Home page
												- logo
												- title
												- url
								- Contact page
			 									- verify user on contact  page
												- create contact
												-  find maximize object or element
												- delete contact
								- logout application
												- click on profile and click on logout
	2) Deals Page

								- login Page
												- 
								- Home page
												- logo
												- title
												- url
								- deals page
												- verify user on deals page
												- create deals
												- delete deals
								- logout application
												- click on profile and click on logout

	3) Company Page

								- login Page
												- 
								- Home page
												- logo
												- title
												- url
								- Company page
												- verify user on Company page
												- create Company
												- delete Company
								- logout application
												- click on profile and click on logout


	4) task page

								- login Page
												- 
								- Home page
												- logo
												- title
												- url
								- task page
												- verify user on task page
												- create task
												- delete task
								- logout application
												- click on profile and click on logout

===========================================================
BaseLayer
		-- using thread local class

Page Layer

Configuration Layer

Utility Layer

Features

Steps

TestRunner

















