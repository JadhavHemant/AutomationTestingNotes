how to achieve data driven testing using Cucumber.
--------------------------------------------------------------------------------------------------------------------
	there are 2 ways we can achieve the data driven testing in cucumber
	1) by using Scenario Outline keyword
	2) by using DataTable class.
--------------------------------------------------------------------------------------------------------------------
2) by using DataTable class.
	- we can achieve the data driven testing in cucumber using DataTable class.
	- we declare the test data in steps level and we generate the snippets, in snippets it will provide the DataTable class arguments or parameter.
	- and these Test data accessible only to above steps only.
	- and if we mention the multiple test data then it will run above steps multiple times.
	-there are multiple ways we can achieve the Data driven testing by using DataTable class
					I) by using asLists() method from DataTable class.
					2) by using cells() method from DataTable class.
					3) by using asMaps() method from DataTable class.

	- in my current framework we use asLists() method from DataTable class.

I) by using asLists() method from DataTable class.
		- return type of asLists() method is List<List<String>>
				List<List<String>> list = dataTable.asLists();
	
			String a = list.get(0).get(0);
			String b = list.get(0).get(1);

e.g.
	Feature: Test orange HRM application
	
	Scenario: Validate the login functionality
	
	Given user is login page
	When user enter valid username and valid password
		| Admin | admin123 |
	Then user click on login button

@When("user enter valid username and valid password")
public void user_enter_valid_username_and_valid_password(DataTable dataTable)
{
			List<List<String>> list = dataTable.asLists();

			String uname = list.get(0).get(0);
			String pass= list.get(0).get(1);
}
----------------------------------------------------------------------------------------------------------------------------------
2) by using cells() method from DataTable class.
		- return type of cells() method is List<List<String>>
				List<List<String>> list = dataTable.cells();
	
			String a = list.get(0).get(0);
			String b = list.get(0).get(1);

e.g.
	Feature: Test orange HRM application
	
	Scenario: Validate the login functionality
	
	Given user is login page
	When user enter valid username and valid password
		| Admin | admin123 |
	Then user click on login button

@When("user enter valid username and valid password")
public void user_enter_valid_username_and_valid_password(DataTable dataTable)
{
			
			List<List<String>> list = dataTable.cells();
			String uname = list.get(0).get(0);
			String pass= list.get(0).get(1);
}
----------------------------------------------------------------------------------------------------------------------------------
3) by using asMaps() method from DataTable class.
		- return type of asMaps() method is List<Map<String,String>>
		- if we using as Maps() method then  we have to use columns name compulsory

			List<Map<String,String>> listmap = dataTable.asMaps();

			String Uname = listmap.get(0).get("username");

			String Pass = listmap.get(0).get("password");
e.g.
	Feature: Test orange HRM application
	
	Scenario: Validate the login functionality
	
	Given user is login page
	When user enter valid username and valid password
		| username | password |
		| Admin | admin123 |
	Then user click on login button


@When("user enter valid username and valid password")
public void user_enter_valid_username_and_valid_password(DataTable dataTable)
{
			List<Map<String,String> listMap = dataTable.asMaps();
	
			String Uname=listMap.get(0).get("username");
			String Pass = listMap.get(0).get("password");

}

======================================================
Feature: Test the Orange HRM Application

  Scenario: Validate the login Functionality
    Given user is on login Page
    When user enter valid username and valid password
      | Admin | admin123 |
    Then user click on login button

package StepDefinition;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class LoginPageSteps {
	static WebDriver driver;

	@Given("user is on login Page")
	public void user_is_on_login_page() {
		driver = new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));
		driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login");

	}

	@When("user enter valid username and valid password")
	public void user_enter_valid_username_and_valid_password(DataTable dataTable) {

		List<List<String>> list = dataTable.asLists();
		String UName = list.get(0).get(0);
		System.out.println(UName);

		String Pass = list.get(0).get(1);
		System.out.println(Pass);

		driver.findElement(By.name("username")).sendKeys(UName);
		driver.findElement(By.name("password")).sendKeys(Pass);

	}

	@Then("user click on login button")
	public void user_click_on_login_button() {
		driver.findElement(By.xpath("//button[text()= ' Login ']")).click();
	}
}
============================================================================
package StepDefinition;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class LoginPageSteps {
	static WebDriver driver;

	@Given("user is on login Page")
	public void user_is_on_login_page() {
		driver = new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));
		driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login");

	}

	@When("user enter valid username and valid password")
	public void user_enter_valid_username_and_valid_password(DataTable dataTable) {

		List<List<String>> list = dataTable.cells();
		String UName = list.get(0).get(0);
		System.out.println(UName);

		String Pass = list.get(0).get(1);
		System.out.println(Pass);

		driver.findElement(By.name("username")).sendKeys(UName);
		driver.findElement(By.name("password")).sendKeys(Pass);

	}

	@Then("user click on login button")
	public void user_click_on_login_button() {
		driver.findElement(By.xpath("//button[text()= ' Login ']")).click();
	}
}
=============================================================
Feature: Test the Orange HRM Application

  Scenario: Validate the login Functionality
    Given user is on login Page
    When user enter valid username and valid password
      | username | password |
      | Admin    | admin123 |
    Then user click on login button

package StepDefinition;

import java.time.Duration;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class LoginPageSteps {
	static WebDriver driver;

	@Given("user is on login Page")
	public void user_is_on_login_page() {
		driver = new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));
		driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login");

	}

	@When("user enter valid username and valid password")
	public void user_enter_valid_username_and_valid_password(DataTable dataTable) {
		List<Map<String, String>> listmap = dataTable.asMaps();
		String UName = listmap.get(0).get("username");
		String Pass = listmap.get(0).get("password");
		driver.findElement(By.name("username")).sendKeys(UName);
		driver.findElement(By.name("password")).sendKeys(Pass);

	}

	@Then("user click on login button")
	public void user_click_on_login_button() {
		driver.findElement(By.xpath("//button[text()= ' Login ']")).click();
	}
}
===============================================================================

Feature: Test Cogmento CRM Application

Scenario: Validate login page functionality

Given user open url in "chrome" browser 
When user enter valid username and password
	| prafulp1010@gmail.com | Pr@ful0812 |
Then user click on login button

Scenario: validate home page functionality
When user is on home page and validate title
And user validate home page url

Scenario: validate contact page functionality
When user click on contact link
And user click on create button
Then user enter first name , last name and select status
	| Amruta | Patil | On Hold |
And user click on save button

Scenario: validate companies page functionality
When user click on companies link
And user click on create button
Then user enter name , website , address and email
	| name | website | address | email |
	| amdocs | www.amdocs.com | pune | contact@amdocs.com |
And user click on save button

------------------------------------------------------------------------------------------------------------------------------------------- 
@Given("user open a url in {string} browser")
public void user_open_a_url_in_browser(String string)
{

}

@When("user enter valid username and password")
public void user_enter_valid_username_and_password(Datatable dataTable)
{

}


-------------------------------------------------------------------------------------------------------------------------------------------
Feature: Test Cogmento CRM Application Functionality

  Scenario: validate login page functionality
    Given user open a url in "headless" browser
    When user enter valid username and password
      | prafulp1010@gmail.com | Pr@ful0812 |
    Then user click on login button

  Scenario: validate home page Functionality
    When user is on home page and validate title
    And user validate url

  Scenario: validate contact page functionality
    When user click on contact link
    And user click on create button
    Then user enter firstname , last name and select status
      | Amruta | Patil | inactive |
    And user click on save button

  Scenario: validate company page functionality
    When user click on company link
    And user click on company page create button
    Then user enter name, website,  address and email
      | name | website      | address | email            |
      | HSBC | www.hsbc.com | Pune    | contact@hsbc.com |
    And user click on save button

package StepDefinitions;

import java.time.Duration;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Assertions;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;

import io.cucumber.datatable.DataTable;
import io.cucumber.java.AfterStep;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class EndToEndPageTestSteps {
	static WebDriver driver;

	@Given("user open a url in {string} browser")
	public void user_open_a_url_in_browser(String browsername) {

		if (browsername.equalsIgnoreCase("chrome")) {
			driver = new ChromeDriver();
		} else if (browsername.equalsIgnoreCase("edge")) {
			driver = new EdgeDriver();
		} else if (browsername.equalsIgnoreCase("incognito")) {
			driver = new ChromeDriver(new ChromeOptions().addArguments("--incognito"));
		} else if (browsername.equalsIgnoreCase("headless")) {
			ChromeOptions opt = new ChromeOptions();
			opt.addArguments("--headless");
			driver = new ChromeDriver(opt);
		} else {
			System.err.println("Please Enter valid browsername");
		}

		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));

		driver.manage().window().maximize();
		driver.get("https://ui.cogmento.com/");
	}

	@When("user enter valid username and password")
	public void user_enter_valid_username_and_password(DataTable dataTable) {
		List<List<String>> list = dataTable.asLists();
		String Uname = list.get(0).get(0);
		String Pass = list.get(0).get(1);
		driver.findElement(By.name("email")).sendKeys(Uname);
		driver.findElement(By.name("password")).sendKeys(Pass);
	}

	@Then("user click on login button")
	public void user_click_on_login_button() {
		driver.findElement(By.xpath("//div[text()='Login']")).click();
	}

	@When("user is on home page and validate title")
	public void user_is_on_home_page_and_validate_title() {
		String actualTitle = driver.getTitle();
		Assertions.assertEquals(actualTitle, "Cogmento CRM");
	}

	@When("user validate url")
	public void user_validate_url() {
		String actualUrl = driver.getCurrentUrl();
		Assertions.assertTrue(actualUrl.contains("cogmento"));
	}

	@When("user click on contact link")
	public void user_click_on_contact_link() {
		driver.findElement(By.xpath("//a[@href='/contacts']")).click();

	}

	@When("user click on create button")
	public void user_click_on_create_button() {
		driver.findElement(By.xpath("//a[@href='/contacts/new']")).click();

	}

	@Then("user enter firstname , last name and select status")
	public void user_enter_firstname_last_name_and_select_status(DataTable dataTable) {
		List<List<String>> list = dataTable.cells();
		String Fname = list.get(0).get(0);
		String LName = list.get(0).get(1);
		String status = list.get(0).get(2);

		driver.findElement(By.name("first_name")).sendKeys(Fname);
		driver.findElement(By.name("last_name")).sendKeys(LName);

		driver.findElement(By.name("status")).click();

		List<WebElement> statusList = driver.findElements(By.xpath("//div[@name='status']/child::span"));

		for (WebElement value : statusList) {
			String statusValue = value.getText();

			if (statusValue.equalsIgnoreCase(status)) {
				value.click();
				break;
			}
		}

	}

	@Then("user click on save button")
	public void user_click_on_save_button() {
		driver.findElement(By.xpath("//button[text()='Save']")).click();
	}

	@When("user click on company link")
	public void user_click_on_company_link() {
		driver.findElement(By.xpath("//a[@href='/companies']")).click();

	}

	@When("user click on company page create button")
	public void user_click_on_company_page_create_button() {
		driver.findElement(By.xpath("//a[@href='/companies/new']")).click();

	}

	@Then("user enter name, website,  address and email")
	public void user_enter_name_website_address_and_email(DataTable dataTable) {
		List<Map<String, String>> listMap = dataTable.asMaps();

		String name = listMap.get(0).get("name");
		String website = listMap.get(0).get("website");
		String address = listMap.get(0).get("address");
		String email = listMap.get(0).get("email");

		driver.findElement(By.name("name")).sendKeys(name);
		driver.findElement(By.name("url")).sendKeys(website);
		driver.findElement(By.name("address")).sendKeys(address);
		driver.findElement(By.name("value")).sendKeys(email);

	}

	// Hooks Annotations
	@AfterStep
	public void tearDown() throws InterruptedException {
		Thread.sleep(3000);
	}

}
===================================================================================

Ass:
	Declare base class
	
	Declare PageLayer package										POM with Page Factory
							LoginPage
							HomePage
							ContactPage
							CompanyPage
							DealsPage

	UtilityLayer
							Wait 
							

src/test/java
	Features Package
	Step Definitions
							LoginPageSteps
							HomePageSteps
							ContactPageSteps
							CompanyPageSteps
							DealsPage
	test Runner

Features Package


Feature: Test Cogmento CRM Application Functionality

  Scenario: validate login page functionality
    Given user open a url in "headless" browser
    When user enter valid username and password
      | prafulp1010@gmail.com | Pr@ful0812 |
    Then user click on login button

  Scenario: validate home page Functionality
    When user is on home page and validate title
    And user validate url

  Scenario Outline: validate contact page functionality
    When user click on contact link
    And user click on create button
    Then user enter "<firstname>" , "<lastName>" and select "<status>"
    And user click on save button

Examples:
	| firstname | lastName | status |
	| 			| 		| On Hold |
	| 			|		|inactive |
	|			| 		| active |
	|			| 		|terminate |
	

  Scenario: validate company page functionality
    When user click on company link
    And user click on company page create button
    Then user enter name, website,  address and email
      | name | website      | address | email            |
      | HSBC | www.hsbc.com | Pune    | contact@hsbc.com |
    And user click on save button

  Scenario: validate Deals page functionality
    When user click on deals link
    And user click on deals page create button
    Then user enter title and user select date as 15 and month and year as "March 2025" and time as "08.45"
    And user click on save button

=====================================================================
What is use of Background keyword in cucumber?															VVVVVIMMPPPPPPPPP
	- background is used to mention the precondition for each and every scenario in feature file.

Feature: Test Cogmento CRM Application Functionality

  Background: 
    Given user open a url in "chrome" browser
    When user enter valid username and password
      | prafulp1010@gmail.com | Pr@ful0812 |
    Then user click on login button

  Scenario: validate home page Functionality
    When user is on home page and validate title
    And user validate url

  Scenario: validate contact page functionality
    When user click on contact link
    And user click on create button
    Then user enter firstname , last name and select status
      | Amruta | Patil | inactive |
    And user click on save button

  Scenario: validate company page functionality
    When user click on company link
    And user click on company page create button
    Then user enter name, website,  address and email
      | name | website      | address | email            |
      | HSBC | www.hsbc.com | Pune    | contact@hsbc.com |
    And user click on save button


	











































