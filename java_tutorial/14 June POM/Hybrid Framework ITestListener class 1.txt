How to configure ITestListener in Hybrid Framework?								VVVVVVIMMPPPPPPPP
			or
What is Listener in TestNG?															VVVVVVIMMPPPPPPPP
			or
Which type of Listener you are using in Framework?								VVVVVVIMMPPPPPPPP
----------------------------------------------------------------------------------------------------------------------------------------------------------------
	- TestNG Listener is used to create the customize logs or reports as per the framework requirements wise

	- TestNG listener in selenium webdriver are modules are used to listen the each and every events as well as certain events and 
	it keep track of test execution flow while performing the actions on every stages of executions.

	- there is different types of Listener in TestNG
			1) IRetryAnalyzer
			2) IAnnotationTransformer
			3) IAnnotationTransformer2
			4) ITestListener
			5) ISuiteListener
			6) IMethodInterceptor
			7) IHookable
			8) IConfigurable
			9) IConfiguration
			10) IReporterListener
			11) IInvokedMethodListener
			12) IInvokedMethodListener2


	- in my current framework we are using IRetryAnalyzer interface listener, IAnnotationTransformer Interface Listener and ITestListener interface.

	- we implements ITestListener interface in Utility Layer package and then we configure in XML file by using listener tagname.

	- once we implements the ITestListener interface in Utility Layer package, then we have override the ITestListener interface methods.
	
	- ITestListener interface they defines the 6 important methods
			1) onStart() method
			2) onTestStart() method
			3) onTestSuccess() method
			4) onTestFailure() method
			5) onTestSkipped() method
			6) onFinish() method

	1) onStart() method
				- onStart() method will call automatically when suite is started.
			
	2) onTestStart() method
				-onTestStart() method will call automatically when test cases is started.

	
	3) onTestSuccess() method
				- onTestSuccess() method will call automatically when test cases is Pass.

	4) onTestFailure() method
				- onTestFailure() method will call automatically when test cases is Fail.

	5) onTestSkipped() method
				- onTestSkipped() method will call automatically when test cases is skip.

	6) onFinish() method
				- onFinish() method will call automatically when suite is ended.

========================================================================================
package UtilityLayer;


public class Sample1 implements ITestListener
{

		@Override
		public void onStart(ITestContext context)
		{
				System.out.println("Suite is started");
		}
		
		@Override
		public void onTestStart(ITestResult result)
		{
				String a = result.getMethod().getMethodName();
				System.out.println("Test Case started name is "+a);
		}

		@Override
		public void onTestSuccess(ITestResult result)
		{		
				String b = result.getMethod().getMethodName();
				System.out.println("Test Case Pass name is "+b);
		}

		@Override
		public void onTestFailure(ITestResult result)
		{
				String c = result.getMethod().getMethodName();
				System.out.println("Test Case Fail name is "+c);
		}

		@Override
		public void onTestSkipped((ITestResult result)
		{
				String d = result.getMethod().getMethodName();
				System.out.println("Test Case Skip name is "+d);
		}

		@Override
		public void onFinish(ITestContext context)
		{
			System.out.println("Suite is ended");
		}
}

how to configure ITestListener in XML file?

	<suite name="suite name or project name">
		<listeners>
				<listener class-name="UtilityLayer.Sample1" />
		</listeners>
	
		<test name="test case name">
			<classes>
					<class name="Tutorial1.Demo1"/>
			</classes>

		</test>
	</suite>
------------------------------------------------------------------------------------------------
package Tutorial1;

public class Demo1
{
		@Test
		public void abc()
		{
				Assert.assertEquals(12,12);
		}
		
		@Test
		public void pqr()
		{
				Assert.assertEquals("facebook", "google");
		}

		@Test
		public void xyz()
		{
				Assert.assertEquals("java", "java");
		}
}
------------------------------------------------------------------------------------------------
package UtilityLayer;

import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

public class Sample1 implements ITestListener {

	@Override
	public void onStart(ITestContext context) {
		
		String p = context.getSuite().getName();
		
		System.out.println("Suite started name is "+p);
	}

	@Override
	public void onTestStart(ITestResult result) {
		String a = result.getMethod().getMethodName();
		System.out.println("Test case started name is "+a);
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		String b = result.getMethod().getMethodName();
		System.out.println("Test case PASS Name is "+b);
		System.out.println("----------------------------------");
	}

	
	@Override
	public void onTestFailure(ITestResult result) 
	{
		String c = result.getMethod().getMethodName();
		System.out.println("Test case FAIL name is "+c);
		System.out.println("----------------------------------");
	}

	@Override
	public void onTestSkipped(ITestResult result) 
	{
		String d = result.getMethod().getMethodName();
		System.out.println("Test Case SKIP name is "+d);
		System.out.println("----------------------------------");
	}

	@Override
	public void onFinish(ITestContext context) 
	{
		String s = context.getSuite().getName();
		
		System.out.println("Suite completed name is "+s);
	}

}

package TestLayer;

import org.testng.Assert;
import org.testng.annotations.Test;

public class Demo1 {
	
	@Test(priority = 1)
	public void loginPage()
	{
		Assert.assertEquals("facebook", "facebook");
	}
	
	@Test(priority = 2)
	public void homePage()
	{
		Assert.assertEquals("google", "selenium");
	}
	
	@Test(priority = 3,dependsOnMethods = {"homePage"})
	public void contactPage()
	{
		Assert.assertEquals(12,12);
	}

}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Orange HRM Application">
	
	<listeners>
		<listener class-name="UtilityLayer.Sample1"></listener>
	</listeners>
	
  <test thread-count="5" name="Test">
    <classes>
      <class name="TestLayer.Demo1"/>
    </classes>
  </test> 
</suite> 
==============================================================================
package BaseLayer;

import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class BaseClass {

	public static WebDriver driver;

	public static void initialization() {
		// connect browser
		// up casting
		driver = new ChromeDriver();
		//implicit wait
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		//pageLoadTimeout
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(30));
		//maximize
		driver.manage().window().maximize();
		//deleteAllCookis
		driver.manage().deleteAllCookies();
		//open a url
		driver.get("https://www.vsp.com/create-account");
	}

}

package PageLayer;

import java.util.List;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.devtools.v118.storage.model.UsageForType;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.FindBys;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.Select;

import BaseLayer.BaseClass;

public class CreateAccountPage extends BaseClass {

	// create Object Repository using Page Object model with Page Factory
	@FindBy(name = "ssn")
	private WebElement ssn;

	@FindBy(name = "firstName")
	private WebElement firstName;

	@FindBy(name = "lastName")
	private WebElement lastName;

	@FindBy(xpath = "//a[@class='icon-calendar']")
	private WebElement dob;

	@FindBy(xpath = "//select[@title='Select year']")
	private WebElement year;

	@FindBy(xpath = "//select[@title='Select month']")
	private WebElement month;

	@FindBys(@FindBy(xpath = "//div[@class='btn-light ng-star-inserted']"))
	private List<WebElement> listDates;

	@FindBy(name = "email")
	private WebElement email;

	@FindBy(name = "confirm-email")
	private WebElement confirmemail;

	@FindBy(name = "mobile-phone-number")
	private WebElement mobile;

	@FindBy(xpath = "//div[@class='ng-input']")
	private WebElement language;

	@FindBys(@FindBy(xpath = "//span[@class='ng-option-label ng-star-inserted']"))
	private List<WebElement> listLanuages;

	@FindBy(name = "username")
	private WebElement username;

	@FindBy(name = "password")
	private WebElement password;

	@FindBy(name = "confirm-password")
	private WebElement confirmpassword;

	// initialize the object repository using PageFactory.initElements(driver, this)
	// in constructor

	public CreateAccountPage() {
		PageFactory.initElements(driver, this);
	}

	public void createAccountFunctinality(String SSN, String FName, String LName, String Date, String Month,
			String Year, String Email, String CEmail, String Phone, String Langauge, String UName, String Pass,
			String CPass) throws InterruptedException {
		// Enter SSN Number
		ssn.sendKeys(SSN);

		// Enter first name
		firstName.sendKeys(FName);

		// enter last name
		lastName.sendKeys(LName);

		Thread.sleep(3000);
		// click on DOB
		dob.click();

		// select the year
		Select selYear = new Select(year);
		selYear.selectByVisibleText(Year);

		// select Month
		Select selMonth = new Select(month);
		selMonth.selectByVisibleText(Month);

		// select date
		// iterate all dates
		for (WebElement abc : listDates) {
			String expectedDate = abc.getText();
			if (expectedDate.equalsIgnoreCase(Date)) {
				abc.click();
				break;
			}
		}

		// enter email
		email.sendKeys(Email);

		// enter confirm email
		confirmemail.sendKeys(CEmail);

		// enter phone
		//mobile.sendKeys(Phone);

		// select the language
		// click language drop down
		language.click();

		// iterate all languages
		for (WebElement lang : listLanuages) {
			String expectedLang = lang.getText();

			if (expectedLang.equalsIgnoreCase(Langauge)) {
				lang.click();
				break;
			}
		}
		// clear and enter username
		username.clear();
		username.sendKeys(UName);
		// enter password
		password.sendKeys(Pass);
		// enter confirm passsword
		confirmpassword.sendKeys(CPass);

	}

}

package UtilityLayer;

import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import BaseLayer.BaseClass;

public class ListenerSetUp extends BaseClass implements ITestListener {

	@Override
	public void onStart(ITestContext context) {
		String a = context.getSuite().getName();
		System.out.println("Suite started name is " + a);
	}

	@Override
	public void onTestStart(ITestResult result) {
		String b = result.getMethod().getMethodName();
		System.out.println("Test cases started name is " + b);
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		String c = result.getMethod().getMethodName();
		System.out.println("Test case Pass name is " + c);
	}

	@Override
	public void onTestFailure(ITestResult result) {
		String d = result.getMethod().getMethodName();
		System.out.println("Test case Fail name is " + d);
	}

	@Override
	public void onTestSkipped(ITestResult result) {
		String e = result.getMethod().getMethodName();
		System.out.println("Test case SKIP name is " + e);
	}

	@Override
	public void onFinish(ITestContext context) {
		String f = context.getSuite().getName();
		System.out.println("Suite ended name is " + f);
	}
}


package TestLayer;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import BaseLayer.BaseClass;
import PageLayer.CreateAccountPage;

public class CreateAccountPageTest extends BaseClass {

	@BeforeTest
	public void setUp() {
		BaseClass.initialization();
	}

	@Test
	public void validateCreateAccountFunctionality() throws InterruptedException {
		CreateAccountPage createAccountPage = new CreateAccountPage();
		createAccountPage.createAccountFunctinality("1234", "Sagar", "Pandit", "1", "Jan", "2000", "sagar@gmail.com",
				"sagar@gmail.com", "909090", "Farsi", "sagar@gmail.com", "SAgar@123", "SAgar@123");

	}

	@AfterTest
	public void tearDown() {
//		driver.quit();
	}

}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="VSP application">
	
	<listeners>
			<listener class-name="UtilityLayer.ListenerSetUp"></listener>
	</listeners>
	
  <test thread-count="5" name="Test">
    <classes>
      <class name="TestLayer.CreateAccountPageTest"/>
    </classes>
  </test> 
</suite> 

=============================================================================
Sauce Demo application end to end flow
				TC1: login
				TC 2: validate home page title
				TC3: validate home page URL
				TC4: add 3 product cart and click on cart container and continue button
				TC5: add personal details
				TC:6;click on finish and capture the success message
-----------------------------------------------------------------------------------------------------------------------------------
Guru99 application flow
				- TC1: register user
				- TC2 : click on sign-in link
				TC3: login
				TC4: capture success message
-----------------------------------------------------------------------------------------------------------------------------------
Orange HRM application PIM Page
				- TC 1: login
				TC 2: validate home page title
				TC3: validate home page URL
				TC4: validate user is on pim page using url
				TC5: create user in pim  page and capture the employee id
				TC6: search user
				
-----------------------------------------------------------------------------------------------------------------------------------
Cogmento CRM Contact page flow
				- TC 1: login
				TC 2: validate home page title
				TC3: validate home page URL
				TC4: validate user is on contact page using url
				TC5: create user in contact page
-----------------------------------------------------------------------------------------------------------------------------------
















































