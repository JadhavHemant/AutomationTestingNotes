1) Check String is Palindrome or not?
		- after reverse String should be equal or original it a Palindrome string.

	
		String a="madam";

		String rev="";//mada

		rev = rev + a.chatAt(4);		m
		rev=rev+ a.chatAt(3);		a
		rev=rev+a.charAt(2);			d
		rev= rev+ a.charAt(1);		a
		rev=rev+a.charAt(0);			m
	
		if(a.equals(rev))
		{
				Syso("String is Palindrome ")
		}
		else
		{
				syso("String is not Palindrome ");
		}
package Tutorial1;

public class PalindromeDemo1 {

	public static void main(String[] args) {
		String a="madam";
		
		String b="";//madam
		
		//b = "" + 'm'
		b=b+a.charAt(4);
		
		//b= "m"+ 'a'
		b=b+a.charAt(3);
		
		//b= "ma"+'d'
		b=b+a.charAt(2);
		
		//b= "mad"+ 'a';
		b=b+a.charAt(1);
		
		//b ="mada"+'m'
		b=b+a.charAt(0);
		
		if(a.equals(b))
		{
			System.out.println("String is Palindrome");
		}
		else
		{
			System.out.println("String is not Palindrome");

		}
		
	}

}
=============================================
package Tutorial1;

public class PalindromeDemo1 {

	public static void main(String[] args) {
		String a = "aaaa";

		String b = "";

		// print 4 to 0 value using for loop
		for (int i = a.length() - 1; i >= 0; i--) {
			b = b + a.charAt(i);
		}

		if (a.equals(b)) {
			System.out.println("String is Palindrome");
		} else {
			System.err.println("String is not Palindrome");

		}

	}

}
=============================================================
package Tutorial1;

public class PalindromeDemo2 {

	public static void main(String[] args) {
		String a="madam";
		
		String b="";//mada
		
		char [] c= a.toCharArray();
		
		//b= ""+'m'
		b=b+c[4];
		
		//b="m"+'a'
		b=b+c[3];
		
		//b="ma"+'d'
		b=b+c[2];
		
		//b="mad"+'a'
		b=b+c[1];
		
		//b ="mada"+'m'
		b=b+c[0];
		
		System.out.println(b);
		
		if(a.equals(b))
		{
			System.out.println("String is Palindrome");
		}
		else
		{
			System.err.println("String is not palindrome");
		}
		
		
		
		
	}
	
}
=============================================
package Tutorial1;

public class PalindromeDemo2 {

	public static void main(String[] args) {
		String a = "aba";

		String b = "";// mada

		char[] c = a.toCharArray();
		//print value from 4 to 0 using for loop
		
		for(int i=c.length-1;i>=0;i--)
		{
			
			b = b + c[i];
		}
		
	

		if (a.equals(b)) {
			System.out.println("String is Palindrome");
		} else {
			System.err.println("String is not palindrome");
		}

	}

}
========================================================================
2) check string is anagram or not?
			 all character should be same in string.

		String a="cda";
		String b="adc";

step 1: sort the string in ascending or descending order
step 2: compare the string and if equal it called as  anagram string

e.g
		char [] p = a.toCharArray();
		Arrays.sort(p);

		char [] s = b.toCharArray();
		Arrays.sort(s);

		if(Arrays.equals(c,d)))
		{
					syso("String is anagram");
		}
		else
		{
					syso("String is not anagram");
		}

package Tutorial1;

import java.util.Arrays;

public class AnagramDemo1 {
	
	public static void main(String[] args) {
		String a="selenium";
		String b="selenium";
		
		//convert a String into char[] array
		char[] p=a.toCharArray();
		
		//sort the p array
		Arrays.sort(p);
		
		//convert b string into char[] array
		char [] s = b.toCharArray();
		
		//sort the s arrat
		Arrays.sort(s);
		
		if(Arrays.equals(p, s))
		{
			System.out.println("String is anagram");
		}
		else
		{
			System.err.println("String is not anagram");
		}
		
	}
	
	
}
package Tutorial1;

import java.util.Arrays;

public class AnagramDemo1 {
	
	public static void main(String[] args) {
		String a="race";
		String b="care";
		
		//convert a String into char[] array
		char[] p=a.toCharArray();
		
		//sort the p array
		Arrays.sort(p);
		
		//convert b string into char[] array
		char [] s = b.toCharArray();
		
		//sort the s arrat
		Arrays.sort(s);
		
		if(Arrays.equals(p, s))
		{
			System.out.println("String is anagram");
		}
		else
		{
			System.err.println("String is not anagram");
		}
		
	}
	
	
}

package Tutorial1;

import java.util.Arrays;

public class AnagramDemo1 {
	
	public static void main(String[] args) {
		String a="race";
		String b="care";
		
		if(a.length()==b.length())
		{

			//convert a String into char[] array
			char[] p=a.toCharArray();
			
			//sort the p array
			Arrays.sort(p);
			
			//convert b string into char[] array
			char [] s = b.toCharArray();
			
			//sort the s arrat
			Arrays.sort(s);
			
			if(Arrays.equals(p, s))
			{
				System.out.println("String is anagram");
			}
			else
			{
				System.err.println("String is not anagram");
			}
		}
		else
		{
			System.err.println("String is not anagram");

		}
		
		
	}
	
	
}
========================================================================
package Tutorial1;

import java.util.TreeSet;

public class AnagramDemo2 {

	public static void main(String[] args) {
		String a = "race";
		String b = "care";

		// check string is Anagram or not using Collection
		char[] p = a.toCharArray();

		TreeSet<Character> t1 = new TreeSet<Character>();

		for (int i = 0; i < p.length; i++) {
			t1.add(p[i]);
		}

		char[] s = b.toCharArray();

		TreeSet<Character> t2 = new TreeSet<Character>();

		for (int i = 0; i < s.length; i++) {
			t2.add(s[i]);
		}

		if (t1.equals(t2)) {
			System.out.println("String is anagram");
		} else {
			System.out.println("String is not anagram");

		}

	}

}
========================================================
package Tutorial1;

import java.util.TreeSet;

public class AnagramDemo2 {

	public static void main(String[] args) {
		String a = "race";
		String b = "care";
		
		TreeSet<Character> t1 = new TreeSet<Character>();
		TreeSet<Character> t2 = new TreeSet<Character>();

		// check string is Anagram or not using Collection
		char[] p = a.toCharArray();
		char[] s = b.toCharArray();

		if (p.length == s.length) {
			for (int i = 0; i < p.length; i++) {
				t1.add(p[i]);
				t2.add(s[i]);
			}
		}

		if (t1.equals(t2)) {
			System.out.println("String is anagram");
		} else {
			System.out.println("String is not anagram");

		}

	}

}
================================================================
package Tutorial1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class AnagramDemo3 {

	public static void main(String[] args) {
		String a = "race";
		String b = "careee";

		char[] p = a.toCharArray();

		ArrayList<Character> arr1 = new ArrayList<Character>();

		for (int i = 0; i < p.length; i++) {
			arr1.add(p[i]);
		}

		Collections.sort(arr1);

		
		char[] s =b.toCharArray();
		
		ArrayList<Character> arr2 = new ArrayList<Character>();
		
		for(int i=0;i<s.length;i++)
		{
			arr2.add(s[i]);
		}
		
		Collections.sort(arr2);
		
		if(arr1.equals(arr2))
		{
			System.out.println("String is anagram");
		}
		else
		{
			System.err.println("String is not anagram");
		}
		
		
		
		
		
		
		
		

	}

}

package Tutorial1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class AnagramDemo3 {

	public static void main(String[] args) {
		String a = "race";
		String b = "care";

		// convert a string into char array
		char[] p = a.toCharArray();
		char[] s = b.toCharArray();

		// create object of ArrayList class
		ArrayList<Character> arr1 = new ArrayList<Character>();
		ArrayList<Character> arr2 = new ArrayList<Character>();

		// check p and s array length is equal or not
		if (p.length == s.length) {
			for (int i = 0; i < p.length; i++) 
			{
				// adding values to arr1 and arr2 array
				arr1.add(p[i]);
				arr2.add(s[i]);
			}
			
			// sort arr1 and arr2 array
			Collections.sort(arr1);
			Collections.sort(arr2);
			System.out.println(arr1);
			
			if (arr1.equals(arr2)) {
				System.out.println("String is anagram");
			} else {
				System.err.println("String is not anagram");
			}
		}
		else
		{
			System.err.println("String is not anagram");
			
		}

		

	}

}

package Tutorial1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class AnagramDemo3 {

	public static void main(String[] args) {
		String a = "race";
		String b = "careee";

		// convert a string into char array
		char[] p = a.toCharArray();
		char[] s = b.toCharArray();

		// create object of ArrayList class
		ArrayList<Character> arr1 = new ArrayList<Character>();
		ArrayList<Character> arr2 = new ArrayList<Character>();

		// check p and s array length is equal or not
		if (p.length == s.length) 
		{
			for (int i = 0; i < p.length; i++) 
			{
				// adding values to arr1 and arr2 array
				arr1.add(p[i]);
				arr2.add(s[i]);
			}
			
			// sort arr1 and arr2 array
			Collections.sort(arr1);
			Collections.sort(arr2);
			System.out.println(arr1);
			
			if (arr1.equals(arr2)) 
			{
				System.out.println("String is anagram");
			} 
			else {
				System.err.println("String is not anagram");
			}
		}
		else {
			System.err.println("String is not anagram");
		}

		

	}

}
=============================================================
package Tutorial1;

import java.util.Arrays;

public class AnagramDemo4 {

	public static void main(String[] args) {
		String a = "race";
		String b = "care";

		// convert string into char array
		char[] p = a.toCharArray();
		char[] s = b.toCharArray();

		// convert char[] in ascending order
		Arrays.sort(p);
		Arrays.sort(s);
	
		//compare the both array values
		if (Arrays.equals(p, s)) {
			System.out.println("String is Anagram");
		} else {
			System.err.println("String is not anagram");
		}

	}
}
===========================================================================
Check String is anagram or not using Collection
					String a = "race";
					String b = "care";

step 1: convert a String into char [] array
					char [] p =a.toCharArray();

step 2: create object of Collection object
					ArrayList<Character> arr1 = new ArrayList<Character>();
					
step3: capture all values from char[] array and add into the Collection object using add method
					for(int i=0;i<p.length;i++)
						{
							arr1.add(p[i]);
						}
			
step 4: sort the collection object using Collections.sort() method and by passing collection object name
					Collections.sort(arr1);

step 5: convert b String into char [] array
					char [] s =b.toCharArray();

step 6: create object of Collection object
					ArrayList<Character> arr2 = new ArrayList<Character>();

step 7: capture all values from char[] array and add into the Collection object using add method

					for(int i=0;i<s.length;i++)
						{
							arr2.add(s[i]);
						}

step 8: sort the collection object using Collections.sort() method and by passing collection object name
					Collections.sort(arr2);
			
step 9: compare the both collection object using equals() method

					if(arr1.equals(arr2))
					{
							syso("String is anagram");
					}	
					else
					{
							syso("String is not anagram");
					}
					
===========================================================================
package Tutorial1;

import java.util.Arrays;

public class Demo1 {

	public static void main(String[] args) {
		// Write a program to check characters from 
	//	String S1 and S2 present in string 3
		
		String s1 = "ABDDEFH";
		String s2 = "CDEFPQRS";
		
		String a=s1+s2;		//ABDCDEF
		
		char[] s =a.toCharArray();
		Arrays.sort(s);
		
		String s3 = "PQRSABDDEFCDEFH";
		char[] p= s3.toCharArray();
		Arrays.sort(p);
		
		
		if(Arrays.equals(s, p))
		{
			System.out.println("String S1 and S2 present in string 3");
		}
		else
		{
			System.out.println("String S1 and S2 value is not present in string 3");
		}
		
		
		
	}

}
package Tutorial1;

import java.util.Arrays;

public class Demo2 {

	public static void main(String[] args) {
		// Write a program to check characters
		// from String S1 & S2 present in string 3

		// condition1: string 1 and string 2 value present in string 3
		// condition2: string 1 and string 2 value is not present in string 3

		String s1= "ABD";
		String s2= "CDEF";
		String s3= "ABDDSEFC";
		String a = s1 + s2; // ABDCDEF

		char[] s = a.toCharArray();
		Arrays.sort(s);

		
		char[] p = s3.toCharArray();
		Arrays.sort(p);

		if (Arrays.equals(s, p)) {
			System.out.println("String S1 and S2 present in string 3");
		} else {
			System.err.println("String S1 and S2 value is not present in string 3");
		}

	}

}
====================================================================







































































