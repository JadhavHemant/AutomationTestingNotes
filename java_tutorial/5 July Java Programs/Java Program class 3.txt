Regular Expression (regex)
==================================================================
	- there are 2 main classes in Regular Expression
		1) Pattern class
				- Pattern class is used to declare the regular expression.
				- To declare the regular expression pattern we use compile method,
				-  return type of compile() method is Pattern class.
			syntax:
					Pattern p = Pattern.compiler("regular Expression");

		2) Matcher class
				- Matcher class is used to group the matchers and match the input sequence.
			syntax:
					Matcher m =p.matchers("String variable");  
				- return type of matchers() method is Matcher class.

				- find() method
						- it will find matching object and return type is boolean
			
				- group() method
						- group method it will group matching objects.
===============================================================
1) find only lower case character from String.
			
		String a="JavaSELENIUm123!@#$p";

	step 1: Declare the pattern by using compile() method
			Pattern p = Pattern.compile("[a-z]");


	step 2: find the all matchers values from a String using matchers() method

			Matcher m = p.matchers(a);

			
	step 3: iterate the loop and and find the matchers group values from a string.
			
			while(m.find())
				{
						String c = m.group();
						syso(c);
				}

package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class findOnlyLowerCaseLetter {

	public static void main(String[] args) {

		String a = "JavasELENIuM231252@#$$@m";

//		step 1: declare the pattern using compile() method

		Pattern p = Pattern.compile("[a-z]");

		// step 2: apply pattern on a String by using matchers()method by passing String
		// variable name

		Matcher m = p.matcher(a);

		// iterate the values and find the matching values from String

		while (m.find()) {
			String c = m.group();
			System.out.print(c);
		}

	}

}
===============================================================
2) find only upper case character from String
		String ="JavaCUCUmber@#$$aaa";
		
		Step 1: declare the pattern by using compile() method
				Pattern p = Pattern.compile("[A-Z]");
	
		Step 2: apply define pattern on String by using matchers() method and  by passing string variable name

				Matcher m = p.matchers(a);

		step 3: iterate all the values and find the matching value (Matchers class we will create the matching value group)
				String c="";
				while(m.find())
				{
						 c = c+m.group();	

				}

				syso(c);

package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class findOnlyUpperCaseLetter {

	public static void main(String[] args) {

		String a = "javaa@$4cucumbeR134ABC";

		// step 1: declare the pattern using compile() method
		Pattern p = Pattern.compile("[A-Z]");

		// step 2: apply pattern on String by using matchers() method and by passing the
		// String variable name

		Matcher m = p.matcher(a);

		String c = "";

		// step 3: iterate all the values and find matching value and group the matching
		// values

		while (m.find()) {
			c = c + m.group();
		}

		System.out.println(c);
	}

}
=================================================================
3) find upper case and lower case values from String
		String a="java#$#$SELENIUM";

		Step 1: declare the pattern by using compile() method
			Pattern p = Pattern.compile("[a-zA-Z]")

		step 2: apply pattern on predefine string by using matchers() method and by passing the String variable name
			
			Matcher m = p.matchers(a);

		step 3: iterate all the values and find the matching values from a string and group the values

			while(m.find())
				{
					String c = m.group();
					syso(c);
				}

package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class findOnlyUpperAndLowerCaseLetter {

	public static void main(String[] args) {
		String a = "java#$#$SELENIUM";

		// step 1: declare the pattern by using compile() method
		Pattern p = Pattern.compile("[a-zA-Z]");

		// step 2: apply pattern in predefined string using matchers() method and by
		// passing string variable name

		Matcher m = p.matcher(a);

		// step 3: iterate all the values and find the matching values and create the
		// group for matching value

		while (m.find()) {
			String c = m.group();
			System.out.print(c);
		}

	}

}
===================================================
package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class findOnlyUpperAndLowerCaseLetter {

	public static void main(String[] args) {
		String a = "java#$#$SEL000887ENIUM";

		// step 1: declare the pattern by using compile() method
		Pattern p = Pattern.compile("[a-zA-Z]");

		// step 2: apply pattern in predefined string using matchers() method and by
		// passing string variable name

		Matcher m = p.matcher(a);

		// step 3: iterate all the values and find the matching values and create the
		// group for matching value

		while (m.find()) {
			String c = m.group();
			System.out.print(c);
		}

	}

}
=====================================================
4) find the numbers from String 
		String a = "javaa@$4cucumbeR134ABC";
		
		step 1: declare the pattern by using compile() method
				Pattern p Pattern.compile("[0-9]");


		step 2: apply pattern on predefined string using matchers() method and by passing the string variables name

				Matcher m = p.matchers(a);

		step 3: iterate all the values and find matching values and create matching values groups

				while(m.find())
				{
						String c= m.group();
						syso(c);
				}

package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class findOnlyNumberFromString {

	public static void main(String[] args) {
		String a = "java123Selenum45@#23cucumber";

		Pattern p = Pattern.compile("[0-9]");

		Matcher m = p.matcher(a);
		String c = "";

		while (m.find()) {
			c = c + m.group();
		}

		int d = Integer.parseInt(c);
		System.out.println(d);

	}

}
=====================================================
5) find the numbers from string

		String a = "java123Selenum45@#23cucumber";

		step 1: declare the pattern by using compile() method
			Pattern p = Pattern.compile("(\\d)");
		
		step 2: apply pattern on predefine string by using matchers() method and by passing String variable name
				
			Matcher m = p.matchers(a);
			
		Step 3: iterate all the values and find the matching and create matching values groups
		
			while(m.find())
			{
				String c = m.group();
				syso(c);
			}
	
package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FindOnlyNumbersFromString2 {

	public static void main(String[] args) {
		String a = "java1!@$%#23Selenum45@#23cucumber";

		// declare the pattern by using compile() method
		// Pattern p =Pattern.compile("[0-9]");

		Pattern p = Pattern.compile("(\\d)");

		// apply pattern on predefined string by using matchers() method and by passing
		// string variable name

		Matcher m = p.matcher(a);

		// iterate all the values and find the matching values and group the matching
		// values

		while (m.find()) {
			String c = m.group();
			System.out.print(c);
		}

	}

}


=======================================================
5) find the special character from string 
		String a = "java123Selenum45@#23cucumber";

	step 1: declare the pattern by using compile() method

			Pattern p = Pattern.compile("[^a-zA-Z0-9]");

	step 2: apply pattern on predefined string by using matchers() method and by passing string variable name
			
			Matcher m = p.matchers(a);

	step 3: iterate all the values and find the matching value and create group for matching values
			
			while(m.find())
			{
				String c = m.group();
				syso(c);
			}
package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FindSpecialCharacterFromString {

	public static void main(String[] args) {

		String a = "java1!@$%#23Selenum45@#23cucumber";

		Pattern p = Pattern.compile("[^a-zA-Z0-9]");
		
		Matcher m =p.matcher(a);

		while (m.find()) {
			System.out.print(m.group());
		}

	}
}
===============================================================
7) find the special character from string
		
		String a = "java1!@$%#23Selenum45@#23cucumber";

		Step 1; declare the pattern by using compile method
			Pattern p = Pattern.compile("(\\W)");

		step 2: apply pattern on predefined string using matchers() method and by passing string variable name

			Matcher m = p.matchers(a);

		step 3: iterate all the ,matching values and create group for matching values
	
			while(m.find())
			{
					String c=m.group();
					syso(c);
			}

package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FindSpecialCharacterfromString2 {

	public static void main(String[] args) {
		String a = "java1!@$%#23Selenum45@#23cucumber";

//		Pattern p = Pattern.compile("[^a-zA-Z0-9]");

		Pattern p = Pattern.compile("(\\W)");

		Matcher m = p.matcher(a);

		while (m.find()) {
			System.out.print(m.group());
		}

	}

}
package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Demo1 {

	public static void main(String[] args) {
		String a = "!2cD$%g5H&";

		// String s="!2cD$%g5H&";
		// ouput=2cDg5H

		// Matcher m = Pattern.compile("[^\\W]").matcher(a);

		Matcher m = Pattern.compile("[a-zA-Z0-9]").matcher(a);

		while (m.find()) {
			System.out.print(m.group());
		}

	}

}

package Tutorial3;

public class Demo2 {

	public static void main(String[] args) {
		String s = "!2cD$%g5H&";
		String result = s.replaceAll("[^a-zA-Z0-9]", "");
		
		System.out.println(result); // Output: 2cDg5H
		
	}

}

String b = "s@an3dh1ya2";

		// Seperate string, digit and special character print all in different variable

		Matcher m = Pattern.compile("(\\d)|(\\W)|([a-zA-Z])").matcher(b);
		String num="";
		String sp="";
		String ch="";
		
		while (m.find()) {
			if (m.group(1) != null) {
				num=num+m.group(1);
			}

			if (m.group(2) != null) {
				sp=sp+m.group(2);
			}
			if (m.group(3) != null) {
				ch=ch+m.group(3);
			}
		}
		
		System.out.println(num);
		System.out.println(sp);
		System.out.println(ch);

=============================================================
		String b = "s@an3dh1ya2";

		// Seperate string, digit and special character print all in different variable

		String sp = b.replaceAll("[a-zA-Z0-9]", "");
		System.out.println(sp);
		
		String ch = b.replaceAll("[^a-zA-Z]", "");
		System.out.println(ch);
		
		String num = b.replaceAll("[^0-9]", "");
		System.out.println(num);
==========================================================
		String s = "Automation Testing";

		// ouput: A u t o m a t i o n
		// T e s t i n g
		String [] abc = s.split(" ");
		
		for(int i=0;i<abc.length;i++)
		{
			String b=abc[i];
			
			for(int j=0;j<b.length();j++)
			{
				System.out.print(b.charAt(j) + " ");
			}
			
			System.out.println();
		}

	}
===============================================================================
package Tutorial3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Demo3 {

	public static void main(String[] args) {
		String input = "Welcome     to      the  interview session     please remove multiple       space    and add     single space";

		String b = input.replaceAll("\\s+", " ");
		
		System.out.println(b);
		

	}

}
=============================================================================

package Tutorial3;

import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Demo4 {

	public static void main(String[] args) {

		String list1 = "John#2000$;nick#3000$;rose#1000$;andy#4000$;josh#5000$";
		// print name and salary

		String[] abc = list1.split(";");

		for (int i = 0; i < abc.length; i++) {
			String[] b = abc[i].split("#");

			for (int j = 0; j < b.length; j++) {
				String d = b[j].replace("$", "");

				for (int k = 0; k < d.length(); k++) {
					System.out.print(d.charAt(k));
				}

				System.out.print(" ");

			}
			System.out.println();

		}

	}

}

package Tutorial3;

import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Demo4 {

	public static void main(String[] args) {

		String list1 = "John#2000$;nick#3000$;rose#1000$;andy#4000$;josh#5000$";
		// print name and salary

		String b = list1.replaceAll("[^a-zA-Z]+", " ");

		String c = list1.replaceAll("[^0-9]+", " ");

		System.out.println(b);

		System.out.println(c);
	}

}

package Tutorial3;

import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Demo4 {

	public static void main(String[] args) {

		String list1 = "John#2000$;nick#3000$;rose#1000$;andy#4000$;josh#5000$";
		// print name and salary

		String b = list1.replaceAll("[^a-zA-Z]+", " ");

		String c = list1.replaceAll("[^0-9]+", " ");

		System.out.println(b);

		System.out.println(c);
	}

}


package Tutorial3;

import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Demo4 {

	public static void main(String[] args) {

		String list1 = "John#2000$;nick#3000$;rose#1000$;andy#4000$;josh#5000$";
		// print name and salary

		String b = list1.replaceAll("[^a-zA-Z0-9]+", " ");

		String [] c = b.split(" ");

		for (int i = 0; i < c.length; i++) 
		{
			System.out.println(c[i]);
		}
		
	}

}

=============================================================================
Pattern Regex										VVVIMMMPPPP


1)  lower case							[a-z]		or 	[^\\W\\d(A-Z)]

2) upper case							[A-Z]		or	[^\\W\\d(a-z)]

3) number								[0-9]			or  (\\d)

4) special character						[^a-zA-Z0-9]		or  (\\W)

































































































