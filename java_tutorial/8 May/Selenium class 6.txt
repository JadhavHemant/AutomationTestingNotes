What are the different types of locators in selenium WebDriver?
		1)id()
		2) name()
		3) className()
		4) tagName()
		5) linkText()
		6) partialLinkText()
		7) xpath()
		8) cssSelector()
-----------------------------------------------------------------------------------------------------------------------------------
What are the different operation we can perform on link?
	-find the link in Web page using findElement() method and using given locators
	- verify link is displayed or not
	- verify link is enabled or not
	- capture the link text
	- click on link
-----------------------------------------------------------------------------------------------------------------------------------
What are the different operation we can perform on button?	
	- find the button in web page using findElement() method and using given locators
	- verify button is displayed or not
	- verify button is enabled or not
	- capture the button text
	- click on button
-----------------------------------------------------------------------------------------------------------------------------------
What are the different operation we can perform on drop down?								VVVVVIMMPPPPPP
			or
How to handle drop down in selenium?
		or
how to verify specific value is present or not in dropdown
	- find the drop down using findElement() and using given locators
	- verify drop down is displayed or not
	- verify the drop down is enabled or not
	- select the values from drop down
	- capture all drop down values
	- check specific value present or not in drop down
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) getText() method														VVVVVVVVIMMMPPPPP
	- it  used to capture physical text in  webpage
	- return type is String
	- this method present inside the WebElement interface.

syntax:
		WebElement wb = driver.findElement(By.id("id value"));

		String a = wb.getText();
		
		System.out.println(a);
-----------------------------------------------------------------------------------------------------------------------------------
What are the different operation we can perform on link?
	- find the link in web page using findElement() method and using given locator				findElement()					WebElement
	-verify the link is displayed or not														isDisplayed()					boolean
	- verify the link is enabled or not?															isEnabled()						boolean
	- capture the link Text																	getText()						String
	- click on link																			click()							void
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Scenario:
	- open a fb register page url
	-find the link in web page using findElement() method and using given locator	
	-verify the link is displayed or not
	- verify the link is enabled or not?	
	- capture the link Text	
	- click on link

Step 1:  connect to actual browser
		System.setProperty("webdriver.chrome.driver","path of chrome driver");

step 2: up casting
		WebDriver driver = new ChromeDriver();

step 3: open a url
		driver.get("https://www.facebook.com/reg");

step 4: find the link using findElement() method and given locators
		WebElement wb = driver.findElement(By.linkText("Already have an account?"))
						or
		WebElement wb = driver.findElement(By.partialLinkText("account?"));


step 5: verify the link in displayed or not
		boolean a = wb.isDisplayed();
		System.out.println(a);		

step 6: verify the link in enabled or not
		boolean b = wb.isEnabled();
		System.out.println(b);	

step 7: capture the link text
		String c = wb.getText();
		System.out.println(c);			

step 8: click on link
		wb.click();
--------------------------------------------------------------------------------------------------------------------------------
package Tutorial5;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo1 {

	public static void main(String[] args) {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register page url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the link in web page using findElement() and given locators
		WebElement wb = driver.findElement(By.linkText("Already have an account?"));

		// step 5: verify the link is displayed or not
		boolean a = wb.isDisplayed();
		System.out.println(a);

		// step 6: verify the link is enabled or not?
		boolean b = wb.isEnabled();
		System.out.println(b);

		// step 7: capture the link text or physical text
		String c = wb.getText();
		System.out.println(c);

	}

}
package Tutorial5;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo1 {

	public static void main(String[] args) throws InterruptedException {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register page url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the link in web page using findElement() and given locators
		WebElement wb = driver.findElement(By.partialLinkText("account?"));

		// step 5: verify the link is displayed or not
		boolean a = wb.isDisplayed();
		System.out.println(a);

		// step 6: verify the link is enabled or not?
		boolean b = wb.isEnabled();
		System.out.println(b);

		// step 7: capture the link text or physical text
		String c = wb.getText();
		System.out.println(c);

		Thread.sleep(5000);
		// step 8: click on link

		wb.click();
	}

}
=================================================================================
diff between getText() and getAttribute() method									VVVVVVVVVVVVIMMMPPPPPPP
	- getText() method is used to capture the physical text in webpage
	- getAttribute()method is used to capture the inner HTML attribute in web page.

	- getText() method does not accept the any arguments
	- getAttribute() method accept the String type of arguments
	
	- return type of getText() method is String
	- return type of getAttribute() method is String

	- both method present inside the WebElement interface.

=================================================================================
What are the different operation we can perform on button?
	- find the button in web page using findElement() and using given locators					findElement()			WebElement
	- verify the button is displayed or not?													isDisplayed()			boolean
	- verify the button is enabled or not														isEnabled()				boolean
	- capture the button physical text									
				Note:
					I) if button tagName start with button then we capture the values using getText() method						getText()		String
					2) if button tagName start with input then we can capture the button values using getAttribute() method			getAttribute()	String
	- click on button																			click()					void


Scenario for button
	- open a facebook url
	- find the button using findElement() method and using given locators
	- verify the button is displayed or not?	
	- - verify the button is enabled or not	
	- capture the button physical text	
	- click on button		


Step 1: connect to actual browser
					System.setProperty("webdriver.chrome.driver","path of chrome driver");
Step 2: up casting
					WebDriver driver =new ChromeDriver();

step 3: open a facebook url
					driver.get("https://www.facebook.com/reg");

step 4: - find the button using findElement() method and using given locators
					WebElement wb = driver.findElement(By.name("websubmit"));

step 5: 	- verify the button is displayed or not?	
					boolean a = wb.isDisplayed();

step 6: - - verify the button is enabled or not	
					boolean b = wb.isEnabled();

step 7: - capture the button physical text	
					String c = wb.getText();
						
	
step 8: - click on button	
					wb.click();

package Tutorial5;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo2 {

	public static void main(String[] args) throws InterruptedException {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register url
		driver.get("https://www.facebook.com/reg");

		// step 4:find the button in webpage
		WebElement wb = driver.findElement(By.name("websubmit"));

		// step 5: verify the displayed status
		boolean a = wb.isDisplayed();
		System.out.println(a);

		// step 6: verify the button enabled status
		boolean b = wb.isEnabled();
		System.out.println(b);

		// step 7: capture the button physical text
		String c = wb.getText();
		System.out.println(c);

		// wait for 5 seconds
		Thread.sleep(5000);

		// step 8: click on button
		wb.click();

	}

}
==================================================================================================
How to handle drop down in selenium															VVVVVVIMMMPPPPPP
			or
how to verify the specific value is present or not in drop down
			or
capture the all the drop down values and print as per the ascending order?
			or
what different operation we can perform on drop down?
		
	- find the drop down in web page using findElement() and using given locator
		WebElement wb = driver.findElement(By.id("month"));
note:
	- if drop down tag name starts with select tag in html code, then we handle drop down using Select class from selenium webdriver.
	- we have to create Object of Select class by passing drop down WebElement instance name or object name
	
		Select sel = new Select(wb);

	- we can select the drop down values by using 3 ways		
		I) by using selectByVisibleText() method
		2) by using selectByValue() method 
		3) by using selectByIndex() method

	- capture all the drop down values
		
Scenario 1:

Step 1:   connect to actual browser
					System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2:up casting 
					WebDriver driver = new ChromeDriver();

step 3:open fb register url
					driver.get("https://www.facebook.com/reg");
			
step 4: find the month drop down
					WebElement wb = driver.findElement(By.id("month"));
					
step 5: create object of Select class by passing the WebElement instance name or Object name
					Select sel =new Select(wb);

step 6: select the Nov month using selectByVisibleText() method
					sel.selectByVisibleText("Nov");


package Tutorial5;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class Demo3 {

	public static void main(String[] args) throws InterruptedException {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the months drop down
		WebElement wb = driver.findElement(By.id("month"));

		// step 5: create Object of Select class by passing WebElement instance name or
		// object name
		Select sel = new Select(wb);

		Thread.sleep(5000);

		// step 6: select the Nov month using selectByVisibleText() method
		sel.selectByVisibleText("Nov");

	}

}
======================================================================================
Scenario 1:

Step 1:   connect to actual browser
					System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2:up casting 
					WebDriver driver = new ChromeDriver();

step 3:open fb register url
					driver.get("https://www.facebook.com/reg");
			
step 4: find the month drop down
					WebElement wb = driver.findElement(By.id("month"));
					
step 5: create object of Select class by passing the WebElement instance name or Object name
					Select sel =new Select(wb);

step 6: select the Aug month using selectByValue() method
					sel.selectByValue("8");


package Tutorial5;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class Demo4 {

	public static void main(String[] args) throws InterruptedException {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the months drop down
		WebElement wb = driver.findElement(By.id("month"));

		// step 5:create object of Select class by passing WebElement instance name or
		// object name
		
		Thread.sleep(5000);
		
		Select sel = new Select(wb);
	
		//step 6: select the Aug month using selectByValue() method
		sel.selectByValue("8");
	}

}


======================================================================================
Scenario 1:

Step 1:   connect to actual browser
					System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2:up casting 
					WebDriver driver = new ChromeDriver();

step 3:open fb register url
					driver.get("https://www.facebook.com/reg");
			
step 4: find the month drop down
					WebElement wb = driver.findElement(By.id("month"));
					
step 5: create object of Select class by passing the WebElement instance name or Object name
					Select sel =new Select(wb);

step 6: select the Mar month using selectByIndex() method
					sel.selectByIndex(2);


package Tutorial5;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class Demo5 {

	public static void main(String[] args) throws InterruptedException {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the months drop down
		WebElement wb = driver.findElement(By.id("month"));

		// step 5:create Object of Select class by passing WebElement instance name or
		// object name

		Select sel = new Select(wb);

		Thread.sleep(5000);

		// step 6:select drop down values using selectByIndex() method
		sel.selectByIndex(10);

	}

}

=============================================================================================
check how many values present in dropdown


Step 1:   connect to actual browser
					System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2:up casting 
					WebDriver driver = new ChromeDriver();

step 3:open fb register url
					driver.get("https://www.facebook.com/reg");
			
step 4: find the month drop down
					WebElement wb = driver.findElement(By.id("month"));
					
step 5: create object of Select class by passing the WebElement instance name or Object name
					Select sel =new Select(wb);

step 6: capture all drop down values using getOptions() method
			
					List<WebElement> ls = sel.getOptions();

Step 7: check how many values present in dropdown
					int abc = ls.size();
					System.out.println(abc);

package Tutorial5;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class Demo6 {

	public static void main(String[] args) {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the year drop down
		WebElement wb = driver.findElement(By.id("year"));

		//step 5: create Object of Select class by passing WebElement instance or Object name
		Select sel = new Select(wb);
		
		//step 6: capture the all drop down values using getOptions() method
		
		List<WebElement> ls = sel.getOptions();
		
		//step 7: check how many values present in dropdown using size() method
		
		int abc = ls.size();
		System.out.println(abc);
		

		
		
	}

}





=============================================================================================
print all down values dropdown


Step 1:   connect to actual browser
					System.setProperty("webdriver.chrome.driver","path of chrome driver");
step 2:up casting 
					WebDriver driver = new ChromeDriver();

step 3:open fb register url
					driver.get("https://www.facebook.com/reg");
			
step 4: find the month drop down
					WebElement wb = driver.findElement(By.id("month"));
					
step 5: create object of Select class by passing the WebElement instance name or Object name
					Select sel =new Select(wb);

step 6: capture all drop down values using getOptions() method
			
					List<WebElement> ls = sel.getOptions();

Step 7: print all dropdown value

				for(WebElement  abc: ls)
				{

							String a = 	abc.getText();
							System.out.println(a);

				}

package Tutorial5;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class Demo7 {

	public static void main(String[] args) {
		// connect to actual browser
		System.setProperty("webdriver.chrome.driver",
				"C:\\Users\\praf0\\OneDrive\\Desktop\\Automation Testing 27th April 2024 Batch\\chromedriver.exe");

		// step 2: up casting
		WebDriver driver = new ChromeDriver();

		// step 3: open a fb register url
		driver.get("https://www.facebook.com/reg");

		// step 4: find the day drop down
		WebElement wb = driver.findElement(By.id("month"));

		// step 5: create object of Select class by passing WebElement instance name
		Select sel = new Select(wb);

		// step 6: capture all the drop down values using getOptions method
		List<WebElement> ls = sel.getOptions();

		// step 7:print all drop down values

		for (WebElement abc : ls) {
			String a = abc.getText();
			System.out.println(a);
		}

	}

}
==================================================================================================
https://copyright.gov.in/UserRegistration/frmNewUser.aspx
https://www.facebook.com/reg
https://demo.guru99.com/insurance/v1/register.php



























































	