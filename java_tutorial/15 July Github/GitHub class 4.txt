Open a power shell in admin mode and run below command
	$ git config --system core.longpaths true
----------------------------------------------------------------------------------------------------------------------------

GitHub Life cycle using Git Bash command line
----------------------------------------------------------------------------------------------------------------------------
Configure GitHub username in Git Bash Command line
syntax:
		git config --global user.email "email id"
e.g.
		git config --global user.email "prafulp1030@gmail.com"
----------------------------------------------------------------------------------------------------------------------------
Configure GitHub password in Git Bash Command line
syntax:
		git config --global user.pass "password"
e.g.
		git config --global user.pass "Pr@ful0812"

----------------------------------------------------------------------------------------------------------------------------
Team Leader
	Step 1: Create Framework using selenium library

	Step 2: create local git repository		[Navigate Project location and then run git all commands]
			git init

	Step 3: add files to stagging area
			git add *
	
	Step 4: commit code to local git repository
			git commit -m "commit message"

	Step 5: create Remote GitHub Repository

	Step 6: configure GitHub Url in Git Bash Command line
			git remote add origin "GitHub URL"

	Step 6: push code to remote GitHub Repository
			git push -u origin master

----------------------------------------------------------------------------------------------------------------------------
Email id


----------------------------------------------------------------------------------------------------------------------------
Dipali Automation Tester
		Step 1: clone a repository
			git clone "url"

		Step 2: import to the Workspace
				open a workspace 
				click on import project and select the project location		

----------------------------------------------------------------------------------------------------------------------------
Rahul Automation Tester
		Step 1: clone a repository
			git clone "url"

		Step 2: import to the Workspace
				open a workspace 
				click on import project and select the project location		

----------------------------------------------------------------------------------------------------------------------------
Dipali Automation Tester
		Step 1: create test cases for login page functionality
		Step 2: create Dipali Sub branch 
					git branch branchname
			e.g.
					git branch Dipali_Sub_branch

		Step 3: checkout to Dipali Sub Branch
					git checkout Dipali_Sub_branch

		Step 4: add files to stagging areas
					git add *

		Step 5; commit code to local git repository
					git commit -m "Message"

		Step 6: push code to remote Dipali Sub Branch
					git push -u origin Dipali_Sub_branch

		Step 7: review the code

		Step 8: checkout master branch
					git checkout master

		Step 9: merge code to master branch from Dipali sub branch
					git merge Dipali_Sub_branch

		Step 10: push code to master branch
					git push -u origin master

--------------------------------------------------------------------------------------------------------------------------------------------------
Rahul Automation Tester
		Step 1: download latest code from Remote GitHub Repository
				git pull

		Step 2: create Rahul Sub Branch
				git branch Rahul_Sub_Branch

		Step 3: checkout to Rahul Sub Branch
				git checkout Rahul_Sub_Branch

		Step 4: merge code to Rahul Sub Branch from master branch
				git merge master

		Step 5: create test cases

		Step 6: add files to stagging area
				git add *

		Step 7: commit code to local git repository
				git commit -m "Message"

		Step 8: push code to remote GitHub Rahul Sub Branch
				git push -u origin Rahul_Sub_Branch

		Step 9; review the code

		Step 10: checkout to master branch'						
					git checkout master

		Step 11; merge code to master branch
					git merge Rahul_Sub_Branch

		Step 12: push code to master branch
					git push -u origin master
=====================================================================================
Dipali Automation Tester
		Step 1: checkout to master
				git checkout master

		Step 2: download latest code from Remote Repository to local repository in master branch
				git pull

		Step 3: checkout to Dipali_Sub_Branch
				git checkout Dipali_Sub_Branch

		Step 4; merge code to Dipali_Sub_Branch from master branch
				git merge master

		Step 5; write test cases

		Step 6: add files to stagging area
				git add *

		Step 7: commit code to git local repository
				git commit -m "Message"

		Step 8: push code to Dipali_Sub_Branch 
				git push -u origin Dipali_Sub_Branch

		Step 9: review the code

		Step 10: checkout to master branch
				git checkout master

		Step 11: merge code to master branch from Dipali_Sub_Branch
				git merge Dipali_Sub_Branch

		Step 12: push code to master branch
				git push -u origin master
=======================================================================================
Rahul Automation Tester
		Step 1: checkout to master branch
				git checkout master

		Step 2:donwload latest code from GitHub Master branch
				git pull

		Step 3: checkout to Rahul_Sub_branch
				git checkout Rahul_Sub_branch

		Step 4: merge code to Rahul_Sub_branch from master branch
				git merge master

		Step 5: create test cases
		Step 6: add files to stagging area
				git add *

		Step 7; commit code to local git repository
				git commit -m "message"

		Step 8: push code to Rahul_Sub_branch in GitHub
				git push -u origin Rahul_Sub_branch

		Step 9: Reviews the code
		Step 10: checkout to master branch
				git checkout master

		Step 11; merge to master branch from Rahul Sub Branch
				git merge Rahul_Sub_branch

		Step 12: push code to master branch
				git push -u origin master

=====================================================================================
Dipali Automation Tester
		Step 1: checkout to master
				git checkout master

		Step 2: download latest code from Remote Repository to local repository in master branch
				git pull

		Step 3: checkout to Dipali_Sub_Branch
				git checkout Dipali_Sub_Branch

		Step 4; merge code to Dipali_Sub_Branch from master branch
				git merge master

		Step 5; write test cases

		Step 6: add files to stagging area
				git add *

		Step 7: commit code to git local repository
				git commit -m "Message"

		Step 8: push code to Dipali_Sub_Branch 
				git push -u origin Dipali_Sub_Branch

		Step 9: review the code

		Step 10: checkout to master branch
				git checkout master

		Step 11: merge code to master branch from Dipali_Sub_Branch
				git merge Dipali_Sub_Branch

		Step 12: push code to master branch
				git push -u origin master




























	




































