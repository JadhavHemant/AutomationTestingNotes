Main GitHub Life cycle																	VVVVIMMMPPPPPPPPP
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	there are different phases in GitHub life cycle
	1) Working directory 
	2) Git Local Repository
	3) GitHub Remote Sub Branch
	4) GitHub Remote Master or Main branchs

	- We Write test script in Working directory by using selenium, then we add all files to the stagging area then we commit all code to git local repository,
	and by entering commit message, then push code to the Remote Sub branch. once we push these code then Team Leader or Senior test engineer we will reviews these code and once review is done then we merge code to the Remote Master branch.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Team Leader:
			Step 1: 	Team Leader will create the BDD Framework

			Step 2:   Team Leader will create Local Git Repository		
								- Right click on Project ---- go to Team --- click on share project
								- select all checkbox and click on create Repository		
								- click on finish
	
			Step 3:	Team Leader will add all files to stagging area
								- Right click on Project ---- go to Team ---  click on Add to index.

			Step 4:	Team Leader will commit code to Git Local Repository by entering the commit message
								- Right click on Project ---- go to Team --- click on commit -- Enter commit message -- click on commit

			Step 5: 	Team Leader will create Remote GitHub Repository
								- Login to GitHub Application --- go to home page
								- click on + icon -- click on create Repository --- Enter Repository name --click on create button.

			Step 6:	Team Leader will push code to master or main  branch.
								- Right click on Project ---- go to Team --- click on push master.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Team Leader Will share Email to Teammates
		
		Hi Team,
			I have created BDD Framework using Cucumber tools, and we have push code to GitHub,
			please clone it and Start working on task
			GitHub: https://github.com/prafulp1030/FacebookTestApplication.git

		Thanks And Regards
		Team Leader
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Suraj Automation Tester
		Step 1: Install Git in Eclipse IDE
		Step 2: clone a GitHub Remote Repository
				- click on Clone GitHub Repository --- Enter the GitHub URL and click on clone.

		Step 3: import project to Working directory from Git Local Repository
				- Right click on Git Local Repository -- click on Import Project -- click on Finish

Monali Automation Tester
		Step 1: Install Git in Eclipse IDE

		Step 2: clone a GitHub Remote Repository
				- click on Clone GitHub Repository --- Enter the GitHub URL and click on clone.

		Step 3: import project to Working directory from Git Local Repository
				- Right click on Git Local Repository -- click on Import Project -- click on Finish

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Suraj Automation Tester
		Step 1:	Login Page Test cases written by Suraj Automation Tester
		step 2:  create Git Local Repository sub Branch
					- Click on Git Local Repository.
					- go to Branches
					- Right click on branch and click on Switch to new Branch
					- Enter branch Name 
					- click on Ok button

		Step 3: checkout Git Local Repository Sub Branch
					-  Click on Git Local Repository -- go to branches -- go to checkout and click on Sub branch name.

		Step 4: add all files to Stagging area
					- Right click on project -- go to team -- click on add to index.

		Step 5: commit code to local git repository
					- Right click on project -- go to team -- click on commit --- enter commit message -- click on commit.

		Step 6: push code to Remote GitHub Sub branch
					- Right click on project -- go to team -- click on push to Suraj Sub branch.

		Step 7: Team Leader or Sr Test Engineer will review these code

		Step 8: merge code to Master Branch.
					- Go to GitHub Remote Repository
					- click on Pull Request (PR) Request
					- Enter Pull Request Message
					- Click on Merge pull Request
					- Confirm Merge Pull Request.
				
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Monali Automation Tester
	 step 1: pull latest code from Master branch or main branch
			- Right click Project  ---- go to team -- click on pull

	step 2: write Home Page Test cases
			
	Step 3: create Monali Sub Branch
			- Right click on Git local Repository -- click on branches -- go to local --click on Switch to new Branch --- Enter branch name - click on ok button.

	Step 4: checkout to Monali Sub branch
			 - Right click on Git local Repository -- click on branches -- go to local-- right click on Monali Sub branch and click on checkout.

	Step 5: add files to stagging area
			- Right click Project  ---- go to team -- click on add to index

	Step 6: commit code to local git repository
			- Right click Project  ---- go to team -- click on commit -- enter commit message -click on commit 

	Step 7: push code to Monali Sub Branch
			- Right click Project  ---- go to team -- click on Push Monali Sub branch

	Step 8: Reviews the code
	Step 9: Merge Code to Master branch from Monali Sub Branch

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Suraj Automation Tester
	step 1: checkout to master branch
				Go to Git Local Repository -- click on branches -- click on local -- Right click Master branch and click on checkout

	Step 2: pull latest code from Remote GitHub Master Repository
			Right click on Project -- go to team -- click on pull

	Step 3: merge code from Master Git Local Repository to Suraj Git Local Repository
			-Right click on project name -- go to team -- click on Merge
			- select the Master Git Local Repository name.
			- click on ok button

	Step 4: create the test cases from Add user in pim page

	step 5: checkout to Suraj Sub branch
			Go to Git Local Repository -- click on branches -- click on local -- Right click Suraj Sub branch and click on checkout

	Step 6: add files to stagging area
				Right click on Project -- go to team -- click on add to index.

	Step 7: commit code to local git repository
				Right click on Project -- go to team -- click on add to commit -- enter commit message -- click on commit.

	Step 8: push code to Suraj Sub Branch'	
				Right click on Project -- go to team -- click on Push Suraj Sub branch

	Step 9: review the code

	Step 10; Merge code to master branch
					- go to Suraj Sub Branch
					- click on compare and pull Request
					- Enter the pull Request message
					- verify the pull request from and to
					- click on create pull request
					- click on  confirm pull 




































	




































































