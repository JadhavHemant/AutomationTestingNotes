How to perform operation Web Elements or Object  in Web Page or browser or UI or GUI or Front End Layer.
------------------------------------------------------------------------------------------------------------------------------------------------
	- first we find the element/object in web page using locator.
	- once we find the element then we perform operation elements or object using findElement() and findElements() method.
	
	- there are 8 types of locator
				I) id
				2) name
				3) className
				4) tagName
				5) linkText
				6) partialLinkText
				7) cssSelector
				8) xpath	
						I) absolute xpath
						2) Relative xpath
------------------------------------------------------------------------------------------------------------------------------------------------
diff between findElement() and findElements() method									VVVVIMMMPPPP

1) findElement() method
		- it is used to find the single element we page.
		- this method present inside the WebDriver interface, WebElement interface and SearchContext interface.
		- return type is WebElement interface.
		- if element is not found using findElement() then it throws NoSuchElementException.
syntax:
		WebElement wb = driver.findElement(By.id("id value"));


2) findElements() method
		- it used to find multiple elements in web page.
		- this method present inside the WebDriver interface, WebElement interface and SearchContext interface.
		- return type is List<WebElement>
		- if element is not found using findElements() then it throws Nothing Exceptions.

syntax:
		List<WebElement> wb = driver.findElements(By.name("id value"));

------------------------------------------------------------------------------------------------------------------------------------------------
WebElement Interface Method

3) isDisplayed() method
		- used to check the element is displayed or not in web page.
		- this method present inside the WebElement interface
		- return type is boolean

			WebElement wb = driver.findElement(By.name(""));
			boolean a = 	wb.isDisplayed();


4)  isEnabled() method
		- used to check the element is enabled or not in web page.
		- this method present inside the WebElement interface
		- return type is boolean

			WebElement wb = driver.findElement(By.name(""));
			boolean a = 	wb.isEnabled();

5) sendKeys() method
		- used to send Text to text box or text area or search button etc.
		- this method present inside the WebElement interface
		- return type  is void,
		- This method accept the only string value.

			WebElement wb = driver.findElement(By.name(""));
			wb.sendKeys("Enter Text");


6) getAttribute() method
		- used to capture the inner HTML DOM Structure attribute.		
		- this method present inside the WebElement interface
		- return type is String,
		- This method accept the only string value.

			WebElement wb = driver.findElement(By.name(""));
			String  c= wb.getAttribute("DOM structure key name");

7) clear() method
		- used to clear the text box , text area etc..
		- this method present inside the WebElement interface
		- return type is void.
		
		WebElement wb = driver.findElement(By.name(""));
		wb.clear();


8) click() method
		- used to click on buttons/checkbox/radio button/link/image link etc..
		- this method present inside the WebElement interface
		- return type is void.

			WebElement wb = driver.findElement(By.name(""));
			wb.click();


9) submit() method
		- used to click on buttons/checkbox/radio button/link/image link etc..
		- this method present inside the WebElement interface
		- return type is void.

			WebElement wb = driver.findElement(By.name(""));
			wb.submit();

10) getText() method
		- used to capture the physical text in web page.
		- this method present inside the WebElement interface
		- return type is String.

		WebElement wb = driver.findElement(By.name(""));
		String a = wb.getText();


11) getCssValue() method
		- used to capture the CSS Properties of elements
		- this method present inside the WebElement interface
		- return type is String.
		- we have pass String arguments.

		WebElement wb = driver.findElement(By.name(""));
		String b = wb.getCssValue("CSS Property name");


12) isSelected() method
		- used to check element or selected or not
		- this method present inside the WebElement interface
		- return type is boolean
	
		WebElement wb = driver.findElement(By.name(""));
		boolean a = wb.isSelected();

------------------------------------------------------------------------------------------------------------------------------------------------
1) Text box 
			- we locate the text box by using findElement() method by passing given locator
			- we use unique locator to locate the element in web page.
			- Text box starts with input tagname.
			- we can perform different Operation on Text box.
						I) text box is displayed or not
						2) text box is enabled or not
						3) enter value in text box
						4) capture the value from text box
						5) clear the text box
		
		syntax:

			WebElement wb = driver.findElement(By.name(""));
			
			I) text box is displayed or not

			boolean a = 	wb.isDisplayed();
			
			2) text box is enabled or not

			boolean b = wb.isEnabled();

			3) enter value in text box
			
			wb.sendKeys("Enter Expected text");

			4) capture the entered value from text box
			
			String c = wb.getAttribute("value");
		
			5) clear the text box
				
			wb.clear();


Scenario:
		- open a facebook register page
		- find the first name text box
		- perform all operation

package Tutorial2;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo1 {

	public static void main(String[] args) throws InterruptedException {

		WebDriver driver = new ChromeDriver();

		driver.get("https://www.facebook.com/reg");

		// locate the first name text box using findElement() method and given locator
		WebElement wb = driver.findElement(By.name("firstname"));

		// check First name text box is displayed or not
		boolean a = wb.isDisplayed();
		System.out.println(a);

		// check first name text box is enabled or not
		boolean b = wb.isEnabled();
		System.out.println(b);

		// Enter value in first name text box
		wb.sendKeys("Gauri");

		// Capture Entered Text from First Name Text box
		String c = wb.getAttribute("value");
		System.out.println(c);

		Thread.sleep(3000);
		// clear the First name Text box value
		wb.clear();

	}

}
=========================================================================
button 
		- first we find the button using findElement() and by passing locator.
		- we use unique locator to locate the element in web page.
		- button tagname is start with button or input tag.
		
		- we can perform different operation on button
		I) check button is displayed or not
		2) check button is enabled or not
		3) click on button
		4) capture the button text / values
						Note:
							I) if button tagname starts with button tag then we capture value using getText() method
							2) if button tagname starts with input tag then we capture value using getAttribute() method.

		5) capture the background color

	--------------------------------------------------------------------------------------------- 
		WebElement wb = driver.findElement(By.name("name value"));
 
		I) check button is displayed or not
		
		boolean a = wb.isDisplayed();

		2) check button is enabled or not
		boolean b = wb.isEnabled();

		3) click on button
			wb.click();
			wb.submit();

		4) capture the button text / values
			I) if button tagname starts with button tag then we capture value using getText() method
		
			String c = wb.getText();
			
			2) if button tagname starts with input tag then we capture value using getAttribute() method.

			String c = wb.getAttribute("DOM Structure key name");

		
		5) capture the background color
			String d = wb.getCssValue("backgroundColor");



Scenario:
		- Open a facebook application
		- find Sign button
		- perform all operation

package Tutorial2;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo2 {

	public static void main(String[] args) throws InterruptedException {
		WebDriver driver = new ChromeDriver();

		driver.get("https://www.facebook.com/reg");

		// locate the Sign Up button using findElement() and by PAssing locator
		WebElement wb = driver.findElement(By.name("websubmit"));

		// check Sign up button is Displayed or not
		boolean a = wb.isDisplayed();
		System.out.println(a);

		// check Sign Up button is enabled or not
		boolean b = wb.isEnabled();
		System.out.println(b);

		Thread.sleep(3000);
		// click on Sign Up button
		// wb.click();
		// wb.submit();

		// capture the Sign Up Text
		String c = wb.getText();
		System.out.println(c);

		// capture the Sign Up button background color
		String d = wb.getCssValue("backgroundColor");
		System.out.println(d);
		
		
	}
}
==============================================================================
Radio button
		- first we locate the radio button by using findElement() and by passing given locator.
		- we use unique locator
		- we can perform different operation on radio button
			I) check radio button is displayed or not
			2) check radio button is enabled or not
			3) check radio button is selected or not
			4) click on radio button
			5) check radio button is selected or not


		WebElement wb = driver.findElement(By.id("id values"));

		I) check radio button is displayed or not
			boolean a = wb.isDisplayed();

		2) check radio button is enabled or not
			boolean b = wb.isEnabled();

		3) check radio button is selected or not
			boolean c = wb.isSelected();

		4)  click on radio button
			wb.click();


		5) check radio button is selected or not
			boolean d = wb.isSelected();


Scenario:
		https://copyright.gov.in/UserRegistration/frmNewUser.aspx
		- find the Society User button
		- perform all operation


package Tutorial2;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo3 {

	public static void main(String[] args) throws InterruptedException {
		WebDriver driver = new ChromeDriver();

		driver.get("https://copyright.gov.in/UserRegistration/frmNewUser.aspx");

		// find Society User Radio button using findElement() method and given locator
		WebElement wb = driver.findElement(By.id("ctl00_ContentPlaceHolder1_rdoSociety"));

		// check Society User Radio button displayed or not
		boolean a = wb.isDisplayed();
		System.out.println(a);

		// check Society User Radio button is enabled or not
		boolean b = wb.isEnabled();
		System.out.println(b);

		// check Society User Radio button is selected or not
		boolean c = wb.isSelected();
		System.out.println(c);

		Thread.sleep(3000);
		// click on Society User Radio button
		wb.click();

		// check Society User Radio button is selected or not
		boolean d = wb.isSelected();
		System.out.println(d);// TRUE

	}
}

========================================================================
Scenario:
	- https://copyright.gov.in/UserRegistration/frmNewUser.aspx
	- find all radio button
	- iterate all radio button using for loop
	- write condition to click on expected radio button.

syntax:
		WebDriver driver =  new ChromeDriver();

		driver.get("https://copyright.gov.in/UserRegistration/frmNewUser.aspx");

		//find all elements

		List<WebElement> listRadio = driver.findElements(By.xpath("//input[@name='ctl00$ContentPlaceHolder1$UserType']/following-sibling::label"));
	
	
		//iterate all List of Radio button values

		for(WebElement radio: listRadio)
		{

					//capture physical text
					String actualValue =radio.getText();

					if(actualValue.equalsIgnoreCase("Society User))
						{
								radio.click();
								break;
						}
		}

=========================================================
package Tutorial2;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo4 {

	public static void main(String[] args) throws InterruptedException {
		WebDriver driver = new ChromeDriver();

		driver.get("https://copyright.gov.in/UserRegistration/frmNewUser.aspx");

		// find all Radio button values

		List<WebElement> listRadio = driver
				.findElements(By.xpath("//input[@name='ctl00$ContentPlaceHolder1$UserType']/following-sibling::label"));

		Thread.sleep(4000);
		// iterate all radio button value

		for (WebElement radio : listRadio) {
			// capture radio button actual value
			String actualValue = radio.getText();

			if (actualValue.equalsIgnoreCase("Society User")) {
				radio.click();
				break;
			}
		}

	}

}
=========================================================================
package Tutorial2;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Demo4 {
	static WebDriver driver;

	public static void selectRadioButton(List<WebElement> listRadio, String ExpectedValue) {
		for (WebElement radio : listRadio) {
			// capture radio button actual value
			String actualValue = radio.getText();

			if (actualValue.equalsIgnoreCase(ExpectedValue)) {
				radio.click();
				break;
			}
		}
	}

	public static void main(String[] args) throws InterruptedException {
		driver = new ChromeDriver();

		driver.get("https://copyright.gov.in/UserRegistration/frmNewUser.aspx");

		// find all Radio button values

		List<WebElement> listRadio = driver
				.findElements(By.xpath("//input[@name='ctl00$ContentPlaceHolder1$UserType']/following-sibling::label"));

		Thread.sleep(4000);
		// iterate all radio button value
		Demo4.selectRadioButton(listRadio, "Society User");

		Thread.sleep(4000);
		// iterate all radio button value
		Demo4.selectRadioButton(listRadio, "General User");

	}

}
================================================================================================
Scenario:
	 - https://www.facebook.com/reg
	-  find the links
	- perform all operation on link
			- displayed status
			 - Enabled status
			- click
			- capture link text
			- capture background color.


Scenario:
	- https://prafpawar11.github.io/checkbox.html
	- find all check box
	- click on even checkbox only.














































