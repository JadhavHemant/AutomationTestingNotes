Cucumber Revision
-----------------------------------------------------------------------------------------------------------------------------------------------------
What is BDD Framework?
-----------------------------------------------------------------------------------------------------------------------------------------------------
	- BDD stands for Behaviour driven development framework.
	- BDD framework is extension of TDD Framework.
	- BDD framework focus on what to test (Scenario) not on how to test (Test cases).
	- BDD Framework use plain English language to write test Scenario and test cases.
	- BDD Framework use the gherkin keyword to write the feature files.

	there are different tools in BDD Framework
	1) Cucumber
	2) JBehave
	3) SpecFlow

	there different languages supported by cucumber
	1) java
	2) python
	3) java script
	4) groovy script
	5) perl
	6) Ruby
	7) php
====================================================================================
What is Cucumber tool or cucumber framework or BDD cucumber framework?
	there are 3 important files in cucumber framework
	1) Feature file
	2) step definition file
	3) Test Runner file

1) Feature file
	- we can create any numbers of features files but extension should be the .feature.
	- first keyword should be Feature followed by colon symbol then short description of features or main functionality
	- One feature file contains we can write any number  of scenarios.
	- In feature, we mentions scenario name or test cases in plain English language by using gherkin keyword.
	- there are different Gherkin keywords present inside the cucumber or Feature file
		1) Feature: 						it is used to mentions the main functionality or project name or main feature file.
		2) Scenario:						it is used to mention the what is exact requirements we have to test?
										Optional keyword for Scenario or Example keyword
		3) Given						it is used to mention the which type of pre condition required to perform the actions.
		4) When						it is used to mention the which type of actions do u want to perform on application scenario.
		5) Then							it is used to mention the what is result we will get after performing the actions.
		6) And							it is used to mention two or more pre condition or actions or result.
		7) But							it is used to declare the multiple pre condition or actions or result.
		8) *								it is used to mention the pre condition, actions, result, combine the actions, declare the multiple actions, it is also called as global keyword.
		9) Scenario Outline:				it is used to achieve the data driven testing in cucumber.
										data driven testing means run the same multiple times by using different set of test data.
										Optional keyword for Scenario Outline is Scenario Template:
		10) Examples:					it is used to mention the test data for Scenario Outline.
										if we have multiple test data then we separate by using pipe symbol
										Optional keyword for Examples: is Scenarios keyword.
		11) Background:				it used to mention the pre condition for each and every scenario.


diff between Scenario and Scenario Outline?
	- Scenario keyword is used to mention what is exact requirements we have to test?
	- Scenario Outline keyword is used to achieve the data driven testing.
	- In Scenario Outline  we can run same Scenario all steps multiple times with different set of test data or inputs/
	- Scenario keyword all steps will run only one time.
	- Scenario Outline all steps will run multiple times as the test data wise.
	- We maintain the Scenario Outline test data in Examples keyword.

What is diff between Scenario and Scenarios keyword?
	- Scenario keyword is used to mention what is exact requirements we have to test?
	- Scenarios keyword is used to mention the test data for Scenario Outline.
	- and we separate the test data by using pipe symbol.

What is diff between Example and Examples keyword?
	- Example keyword is used to mention what is exact requirements we have to test?
	- Examples keyword is used to mention the test data for Scenario Outline.
	- and we separate the test data by using pipe symbol.


What is Background keyword?
	- we use Background keyword after the Features keywords in feature file.
	- Background keyword is used to mention the pre condition for each and every scenario in feature file.
	- in Background keyword we declare the steps by using Given, When, Then, And, But, * keyword.

========================================================================
2) Step Definition file
	- Step Definition file is nothing the java files
	- once we run the feature file then cucumber will generate the snippets for each and every step in feature file.
	- we copy the snippets (method) and paste in Step Definition package and their we write selenium code as per the steps wise.

				Feature											Step Definitions
Feature:
Scenario:
Given					-----------------------------------------------------------> @Given
And					-----------------------------------------------------------> @Given
When					-----------------------------------------------------------> @When
And					-----------------------------------------------------------> @When
Then					-----------------------------------------------------------> @Then
But						-----------------------------------------------------------> @Then
*						-----------------------------------------------------------> @Then

Feature:
Scenario:
When					----------------------------------------------------------->@When
And					----------------------------------------------------------->@When
But						----------------------------------------------------------->@When
*						----------------------------------------------------------->@When
Then					----------------------------------------------------------->@Then


Feature:
Scenario:
And					----------------------------------------------------------->@Given
And					----------------------------------------------------------->@Given
Then					----------------------------------------------------------->@Then
*						----------------------------------------------------------->@Then
Then					----------------------------------------------------------->@Then

-----------------------------------------------------------------------------------------------------------------------------
in Step Definition files we declare hooks,
	by using Hooks, we declare the pre condition as well as post conditions
	
1) Pre Conditions
			1) @BeforeAll
			2) @Before
			3) @BeforeStep

2) Post condition
			1) @AfterAll
			2) @After
			3) @AfterStep

@BeforeStep
				- it is pre condition for each and every step in feature file

@AfterStep
				- it is post condition for each and every step in feature file

@Before
				- it is pre condition for each and every scenario in feature file

@After
				- it is post condition for each and every scenario in feature file

@BeforeAll
				- it is pre condition for all scenario in feature file

@AfterAll
				- it is post condition for all scenario in feature file

-------------------------------------------------------------------------------------------------------------------------------
diff between hooks and Background?
	- By using Background we mention only pre condition , we can't write post conditions.
	- by using Hooks we can mention pre condition as well as post conditions,
	- by using Hooks concept we can pre condition and post conditions for step level, Scenario level and Feature level.
	- by using Background, we can mention pre condition for Scenario level only.
-------------------------------------------------------------------------------------------------------------------------------
if we mention Background keyword and hooks in same scenario which one will execute first?
	- first priority goes to hooks then it will execute the Background.

======================================================================================
3) Test Runner File
	- Test Runner is an java files
	- there are different annotation present inside the test Runner class.
		1) @RunWith()							it is used to run the test as cucumber test.
		2) @CucumberOptions()				it used to declare multiple things as like
												I) we declare feature file location using features keyword
												2) we declare step definition file location using glue or extraGlue keyword
												3) we check mapping between feature file steps and snippets using dryRun keyword
												4) we can display the output console in proper readable format using monochrome keyword
												5) we can generate reports using plugin keyword
												6) we can run specific scenario by  using tags keyword.

	- if u want to configure the cucumber with testng then we extends the AbstractTestNGCucumberTests class in Test Runner
	and we use only @CucumberOptions annotation


how to declare the feature file location in test runner class?
		- we use features keyword then pass feature file name.
e.g.
		features= "src/test/java/Features/pimpage.feature"
--------------------------------------------------------------------------------------------------------------------------------
can we declare the multiple feature location in test runner class?
		yes, we can,
e.g.
		features= { "src/test/java/Features/pimpage.feature" ,  "src/test/java/Features/adminpage.feature" }
--------------------------------------------------------------------------------------------------------------------------------
what is use of glue keyword or extraGlue keyword?	
how to declare the step definition file location
		- we use glue keyword or extraGlue keyword to mention the step definition file location
e.g.
		glue = "StepDefinitions1"
--------------------------------------------------------------------------------------------------------------------------------
can we declare the multiple step definition location in test runner class?
		yes, we can,
e.g.
		glue =  { "StepDefinitions1" , "StepDefinitions2"}
--------------------------------------------------------------------------------------------------------------------------------
What is use of dryRun keyword or strict keyword?
		- dryRun keyword is used to check the mapping between feature file all steps to all snippets
		- if any steps is not present inside the Step Definition package then it generate the new snippets.

--------------------------------------------------------------------------------------------------------------------------------
how to skip the specific scenario?
	- if u want to skip the scenario then in feature file, 
	and inside the scenario level we declare tag name by using @ symbol
	then we use same tags inside the test runner in tags keyword equal to not keyword tagname

===============================================================================


			~ (telda)			---- as per the old cucumber version
			not					--- as per the latest version































































































			





	

































